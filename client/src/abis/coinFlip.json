{
  "contractName": "CoinFlip",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_queryId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "close",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "collectBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "queryId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "won",
          "type": "bool"
        }
      ],
      "name": "CoinFlipResult",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "ContractDeposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "ContractWithdrawal",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "flipCoin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "number",
          "type": "uint256"
        }
      ],
      "name": "GeneratedRandomNumber",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "error",
          "type": "string"
        }
      ],
      "name": "LogError",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "queryId",
          "type": "bytes32"
        }
      ],
      "name": "LogNewProvableQuery",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMinumumBet",
          "type": "uint256"
        }
      ],
      "name": "setMinimumBet",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balancesToBeCollected",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minimumBet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "myBalanceToBeCollected",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "pendingQueries",
      "outputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bet",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"won\",\"type\":\"bool\"}],\"name\":\"coinFlipResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"contractDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"contractWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"generatedRandomNumber\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"logNewProvableQuery\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"collectBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"flipCoin\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"generateRandom\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"latestNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimumBet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"myBalanceToBeCollected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMinumumBet\",\"type\":\"uint256\"}],\"name\":\"setMinimumBet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"__callback(bytes32,string)\":{\"details\":\"The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/ernowever/Development/Ethereum 201/CoinFlip/smart-contracts/contracts/CoinFlip.sol\":\"CoinFlip\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ernowever/Development/Ethereum 201/CoinFlip/smart-contracts/contracts/Bank.sol\":{\"keccak256\":\"0xe1247c97201d4663f4e193b9da68ce3c53fbb50049b855adec6ad0160494be0d\",\"urls\":[\"bzz-raw://51d4d5b02e007e416ee396dcff794628f207da4a0a02ae94869cb6e5196eb506\",\"dweb:/ipfs/QmTPzYL8T68PYgAFGQjGDMuu2ssTBfXSCyqwCdYbJb6mBE\"]},\"/Users/ernowever/Development/Ethereum 201/CoinFlip/smart-contracts/contracts/CoinFlip.sol\":{\"keccak256\":\"0x734ce80cd64b9c0c069e0da6d2190b1e0472d8c3a27f68b0421aee5553576b79\",\"urls\":[\"bzz-raw://383bdff4bf0dd349645c77086389d7d7e967b01f71dc9da6ba381163a231b1df\",\"dweb:/ipfs/QmT7J1NoitGKtigHWvowY81KepWVUr1MNg18jCvRoddjoG\"]},\"/Users/ernowever/Development/Ethereum 201/CoinFlip/smart-contracts/contracts/Ownable.sol\":{\"keccak256\":\"0x71c1375e217f49e9748e56e529fe08f4d9e1c93d98abd7394572bad9f553af38\",\"urls\":[\"bzz-raw://09882c8d13d10a3cbc74582c1c685bdb2a7a29f0e1e3be450d3f22eac7d72074\",\"dweb:/ipfs/QmSvyHejf34vNL6TUqDkqeUkXRvfY39VXjotWvcuawRVth\"]},\"/Users/ernowever/Development/Ethereum 201/CoinFlip/smart-contracts/contracts/provableAPI.sol\":{\"keccak256\":\"0xda87090f87cb0b167e8b69cadae91b27ecc80e07be7aa5832129c698e4d36d22\",\"urls\":[\"bzz-raw://9a2679e98b5033f414c594abef585b7c5e7dc93f5ebb6d1e9255b4dc918ffa36\",\"dweb:/ipfs/QmV4arSaRPPiQPDMZytD5CeKF18NuyPt67MtgAmZn2g45r\"]}},\"version\":1}",
  "bytecode": "0x6080604052655af3107a40006002553480156200001b57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600181905550620000736200007a60201b60201c565b5062001fbd565b600080620000956000600162030d406200010660201b60201c565b90507f94f2559b5e2b297de3db1587daf2352e872ada3dad01dab9ee3733592fa22ed36040518080602001828103825260178152602001807f50726f7661626c65207175657279207761732073656e7400000000000000000081525060200191505060405180910390a18091505090565b6000808311801562000119575060208311155b6200012357600080fd5b600a84029350606060016040519080825280601f01601f191660200182016040528015620001605781602001600182028038833980820191505090505b5090508360f81b816000815181106200017557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f191660200182016040528015620001db5781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f191660200182016040528015620002155781602001600182028038833980820191505090505b50905060006200022a620006d960201b60201c565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f1916602001820160405280156200027f5781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f191660200182016040528015620002bf5781602001600182028038833980820191505090505b509050620002da826018600884600062000a1560201b60201c565b50620002e562001ecc565b60405180608001604052808781526020018881526020018681526020018481525090506000620003526040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c62000a7760201b60201c565b9050606060086040519080825280601f01601f1916602001820160405280156200038b5781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a010000000000000000000000000000000000000000000000000000810460228301537901000000000000000000000000000000000000000000000000008104602183015378010000000000000000000000000000000000000000000000008104602083015350620006c6828285600160048110620004cc57fe5b6020020151600287600060048110620004e157fe5b60200201516040518082805190602001908083835b602083106200051b5780518252602082019150602081019050602083039250620004f6565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa1580156200055e573d6000803e3d6000fd5b5050506040513d60208110156200057457600080fd5b8101908080519060200190929190505050876002600481106200059357fe5b60200201516040516020018085805190602001908083835b60208310620005d05780518252602082019150602081019050602083039250620005ab565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b60208310620006235780518252602082019150602081019050602083039250620005fe565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b602083106200067c578051825260208201915060208101905060208303925062000657565b6001836020036101000a0380198251168184511680821785525050505050509050019450505050506040516020818303038152906040528051906020012062000e1160201b60201c565b8199505050505050505050509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806200076a5750600062000768600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000e2d60201b60201c565b145b15620007845762000782600062000e3860201b60201c565b505b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015620007ef57600080fd5b505af115801562000804573d6000803e3d6000fd5b505050506040513d60208110156200081b57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146200096a57600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015620008ec57600080fd5b505af115801562000901573d6000803e3d6000fd5b505050506040513d60208110156200091857600080fd5b8101908080519060200190929190505050600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b158015620009d357600080fd5b505afa158015620009e8573d6000803e3d6000fd5b505050506040513d6020811015620009ff57600080fd5b8101908080519060200190929190505050905090565b606060008285019050808451101562000a2d57600080fd5b600086602001905060008460200190505b86886020010182101562000a68578189015180828801525060208201915060208101905062000a3e565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148062000b085750600062000b06600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000e2d60201b60201c565b145b1562000b225762000b20600062000e3860201b60201c565b505b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801562000b8d57600080fd5b505af115801562000ba2573d6000803e3d6000fd5b505050506040513d602081101562000bb957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000d0857600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801562000c8a57600080fd5b505af115801562000c9f573d6000803e3d6000fd5b505050506040513d602081101562000cb657600080fd5b8101908080519060200190929190505050600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6060600460405190808252806020026020018201604052801562000d4157816020015b606081526020019060019003908162000d2b5790505b5090508360006004811062000d5257fe5b60200201518160008151811062000d6557fe5b60200260200101819052508360016004811062000d7e57fe5b60200201518160018151811062000d9157fe5b60200260200101819052508360026004811062000daa57fe5b60200201518160028151811062000dbd57fe5b60200260200101819052508360036004811062000dd657fe5b60200201518160038151811062000de957fe5b602002602001018190525062000e0785828562000e5160201b60201c565b9150509392505050565b8060076000848152602001908152602001600020819055505050565b6000813b9050919050565b600062000e4a620013e960201b60201c565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148062000ee25750600062000ee0600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000e2d60201b60201c565b145b1562000efc5762000efa600062000e3860201b60201c565b505b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801562000f6757600080fd5b505af115801562000f7c573d6000803e3d6000fd5b505050506040513d602081101562000f9357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614620010e257600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200106457600080fd5b505af115801562001079573d6000803e3d6000fd5b505050506040513d60208110156200109057600080fd5b8101908080519060200190929190505050600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156200117b5780820151818401526020810190506200115e565b50505050905090810190601f168015620011a95780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015620011ca57600080fd5b505af1158015620011df573d6000803e3d6000fd5b505050506040513d6020811015620011f657600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a7640000018111156200122b576000801b915050620013e2565b60606200123e85620019b860201b60201c565b9050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015620012e5578082015181840152602081019050620012c8565b50505050905090810190601f168015620013135780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b838110156200134e57808201518184015260208101905062001331565b50505050905090810190601f1680156200137c5780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b1580156200139f57600080fd5b505af1158015620013b4573d6000803e3d6000fd5b50505050506040513d6020811015620013cc57600080fd5b8101908080519060200190929190505050925050505b9392505050565b60008062001411731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed62000e2d60201b60201c565b1115620014bd57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620014b36040518060400160405280600b81526020017f6574685f6d61696e6e657400000000000000000000000000000000000000000081525062001a7360201b60201c565b60019050620019b5565b6000620014e473c03a2615d5efaf5f49f60b7bb6583eaec212fdf162000e2d60201b60201c565b1115620015905773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620015866040518060400160405280600c81526020017f6574685f726f707374656e33000000000000000000000000000000000000000081525062001a7360201b60201c565b60019050620019b5565b6000620015b773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e62000e2d60201b60201c565b1115620016635773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620016596040518060400160405280600981526020017f6574685f6b6f76616e000000000000000000000000000000000000000000000081525062001a7360201b60201c565b60019050620019b5565b60006200168a73146500cfd35b22e4a392fe0adc06de1a1368ed4862000e2d60201b60201c565b1115620017365773146500cfd35b22e4a392fe0adc06de1a1368ed48600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200172c6040518060400160405280600b81526020017f6574685f72696e6b65627900000000000000000000000000000000000000000081525062001a7360201b60201c565b60019050620019b5565b60006200175d73a2998efd205fb9d4b4963afb70778d6354ad3a4162000e2d60201b60201c565b1115620018095773a2998efd205fb9d4b4963afb70778d6354ad3a41600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620017ff6040518060400160405280600a81526020017f6574685f676f65726c690000000000000000000000000000000000000000000081525062001a7360201b60201c565b60019050620019b5565b600062001830736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47562000e2d60201b60201c565b11156200189657736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050620019b5565b6000620018bd7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf62000e2d60201b60201c565b111562001923577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050620019b5565b60006200194a7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa62000e2d60201b60201c565b1115620019b0577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050620019b5565b600090505b90565b6060620019ca62001a8f60201b60201c565b620019d462001ef4565b620019ed8161040062001a9b60201b620030f31760201c565b62001a038162001ae860201b6200313d1760201c565b60008090505b835181101562001a4f5762001a4184828151811062001a2457fe5b60200260200101518362001afe60201b6200314b1790919060201c565b808060010191505062001a09565b5062001a668162001b3260201b620031701760201c565b8060000151915050919050565b806006908051906020019062001a8b92919062001f0e565b5050565b60405180590338823950565b600081905060006020828162001aad57fe5b061462001ac8576020818162001abf57fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b62001afb81600462001b4860201b60201c565b50565b62001b13826002835162001b7060201b60201c565b62001b2d818362001cf860201b620032df1790919060201c565b505050565b62001b4581600762001b4860201b60201c565b50565b62001b6c601f60058360ff16901b178362001db860201b6200338a1790919060201c565b5050565b6017811162001ba55762001b9f8160058460ff16901b60ff16178462001db860201b6200338a1790919060201c565b62001cf3565b60ff811162001bf65762001bd2601860058460ff16901b178462001db860201b6200338a1790919060201c565b62001bef8160018562001e0160201b620033ca179092919060201c565b5062001cf2565b61ffff811162001c485762001c24601960058460ff16901b178462001db860201b6200338a1790919060201c565b62001c418160028562001e0160201b620033ca179092919060201c565b5062001cf1565b63ffffffff811162001c9c5762001c78601a60058460ff16901b178462001db860201b6200338a1790919060201c565b62001c958160048562001e0160201b620033ca179092919060201c565b5062001cf0565b67ffffffffffffffff811162001cef5762001cd0601b60058460ff16901b178462001db860201b6200338a1790919060201c565b62001ced8160088562001e0160201b620033ca179092919060201c565b505b5b5b5b5b505050565b62001d0262001ef4565b8260200151836000015151835101111562001d435762001d4283600262001d358660200151865162001e7b60201b60201c565b0262001e9960201b60201c565b5b60008060008451905085518051602081830101945086518101825260208701935050505b6020811062001d8c578151835260208301925060208201915060208103905062001d67565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b8160200151600183600001515101111562001de75762001de682600284602001510262001e9960201b60201c565b5b815180516020818301018381536001820183525050505050565b62001e0b62001ef4565b83602001518460000151518301111562001e4a5762001e4984600262001e3c87602001518662001e7b60201b60201c565b0262001e9960201b60201c565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b60008183111562001e8f5782905062001e93565b8190505b92915050565b60608260000151905062001eb4838362001a9b60201b60201c565b62001ec6838262001cf860201b60201c565b50505050565b60405180608001604052806004905b606081526020019060019003908162001edb5790505090565b604051806040016040528060608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062001f5157805160ff191683800117855562001f82565b8280016001018555821562001f82579182015b8281111562001f8157825182559160200191906001019062001f64565b5b50905062001f91919062001f95565b5090565b62001fba91905b8082111562001fb657600081600090555060010162001f9c565b5090565b90565b6135fe8062001fcd6000396000f3fe6080604052600436106100e85760003560e01c8063853828b61161008a578063b69ef8a811610059578063b69ef8a8146104a8578063c38a8afd146104d3578063d0e30db0146104fe578063dc34b0aa1461051c576100e8565b8063853828b6146103d45780638772ae3c146103ff5780638cf4dbfb1461043a5780638da5cb5b14610451576100e8565b806338bbfa50116100c657806338bbfa501461021f57806343d726d614610388578063797778361461039f578063799ae223146103ca576100e8565b806302e4af01146100ed57806327dc297e1461010b5780632e1a7d4d146101dd575b600080fd5b6100f5610547565b6040518082815260200191505060405180910390f35b34801561011757600080fd5b506101db6004803603604081101561012e57600080fd5b81019080803590602001909291908035906020019064010000000081111561015557600080fd5b82018360208201111561016757600080fd5b8035906020019184600183028401116401000000008311171561018957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061060e565b005b610209600480360360208110156101f357600080fd5b8101908080359060200190929190505050610651565b6040518082815260200191505060405180910390f35b34801561022b57600080fd5b506103866004803603606081101561024257600080fd5b81019080803590602001909291908035906020019064010000000081111561026957600080fd5b82018360208201111561027b57600080fd5b8035906020019184600183028401116401000000008311171561029d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561030057600080fd5b82018360208201111561031257600080fd5b8035906020019184600183028401116401000000008311171561033457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610763565b005b34801561039457600080fd5b5061039d610ab1565b005b3480156103ab57600080fd5b506103b4610b8c565b6040518082815260200191505060405180910390f35b6103d2610bd8565b005b3480156103e057600080fd5b506103e9610d41565b6040518082815260200191505060405180910390f35b34801561040b57600080fd5b506104386004803603602081101561042257600080fd5b8101908080359060200190929190505050610e14565b005b34801561044657600080fd5b5061044f610ee0565b005b34801561045d57600080fd5b50610466610f7f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104b457600080fd5b506104bd610fa4565b6040518082815260200191505060405180910390f35b3480156104df57600080fd5b506104e8610faa565b6040518082815260200191505060405180910390f35b610506610fb0565b6040518082815260200191505060405180910390f35b34801561052857600080fd5b506105316110c5565b6040518082815260200191505060405180910390f35b600061058b6040518060400160405280600681526020017f72616e646f6d000000000000000000000000000000000000000000000000000081525062030d406110cb565b60015411610601576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6e6f7420656e6f7567682066756e647320666f722070726f7661626c6500000081525060200191505060405180910390fd5b610609611468565b905090565b61064d828260006040519080825280601f01601f1916602001820160405280156106475781602001600182028038833980820191505090505b50610763565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610715576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f6f6e6c792061636365737320666f7220746865206f776e65720000000000000081525060200191505060405180910390fd5b7fcdbda4692d85c08dcb06ba853dfb15e5ebba5ef0479978e04f493ec12c2eb1646001546040518082815260200191505060405180910390a161075882336114ec565b506001549050919050565b61076b6115af565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461080b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f696e636f7272656374206164647265737300000000000000000000000000000081525060200191505060405180910390fd5b60006002836040516020018082805190602001908083835b602083106108465780518252602082019150602081019050602083039250610823565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c8161088b57fe5b069050806009819055507fc13d60fe9dffdb6908d2d446cd18134373a51db0738ee04f296eeb9128121cbc816040518082815260200191505060405180910390a16000600a60008681526020019081526020016000209050600a6000868152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090555050600080831490508015610a0a576002826001015402600360008460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401600360008460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b7fb4ad5da395d3bba1535d767dbfc8e03665526a0ce05f69252d142015895f28fa8260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836001015483604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390a1505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b73576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f6f6e6c792061636365737320666f7220746865206f776e65720000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b600080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508091505090565b60025480341015610c34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061357a602a913960400191505060405180910390fd5b346001541015610c8f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806135576023913960400191505060405180910390fd5b346001600082825401925050819055506000610ca9610547565b905060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200134815250600a600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f6f6e6c792061636365737320666f7220746865206f776e65720000000000000081525060200191505060405180910390fd5b610e10600154610651565b5090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ed6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f6f6e6c792061636365737320666f7220746865206f776e65720000000000000081525060200191505060405180910390fd5b8060028190555050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115610f7c57610f3781336114ec565b50600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090555b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611074576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f6f6e6c792061636365737320666f7220746865206f776e65720000000000000081525060200191505060405180910390fd5b7f60a44ec1e34e2d6bd511ca26c0918fe4ca6cd0e8ade53c85ef9048b355cc41996001546040518082815260200191505060405180910390a134600160008282540192505081905550600154905090565b60095481565b60008073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061115357506000611151600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166118cf565b145b156111645761116260006118da565b505b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156111ce57600080fd5b505af11580156111e2573d6000803e3d6000fd5b505050506040513d60208110156111f857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461134357600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156112c757600080fd5b505af11580156112db573d6000803e3d6000fd5b505050506040513d60208110156112f157600080fd5b8101908080519060200190929190505050600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc84846040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156113d85780820151818401526020810190506113bd565b50505050905090810190601f1680156114055780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561142557600080fd5b505af1158015611439573d6000803e3d6000fd5b505050506040513d602081101561144f57600080fd5b8101908080519060200190929190505050905092915050565b60008061147b6000600162030d406118eb565b90507f94f2559b5e2b297de3db1587daf2352e872ada3dad01dab9ee3733592fa22ed36040518080602001828103825260178152602001807f50726f7661626c65207175657279207761732073656e7400000000000000000081525060200191505060405180910390a18091505090565b6000826001541015611549576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806135a46026913960400191505060405180910390fd5b6000839050836001600082825403925050819055508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156115a4573d6000803e3d6000fd5b508091505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061163757506000611635600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166118cf565b145b156116485761164660006118da565b505b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156116b257600080fd5b505af11580156116c6573d6000803e3d6000fd5b505050506040513d60208110156116dc57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461182757600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156117ab57600080fd5b505af11580156117bf573d6000803e3d6000fd5b505050506040513d60208110156117d557600080fd5b8101908080519060200190929190505050600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561188f57600080fd5b505afa1580156118a3573d6000803e3d6000fd5b505050506040513d60208110156118b957600080fd5b8101908080519060200190929190505050905090565b6000813b9050919050565b60006118e4611e86565b9050919050565b600080831180156118fd575060208311155b61190657600080fd5b600a84029350606060016040519080825280601f01601f1916602001820160405280156119425781602001600182028038833980820191505090505b5090508360f81b8160008151811061195657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f1916602001820160405280156119bb5781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f1916602001820160405280156119f45781602001600182028038833980820191505090505b5090506000611a016123dd565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f191660200182016040528015611a555781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f191660200182016040528015611a945781602001600182028038833980820191505090505b509050611aa782601860088460006126fd565b50611ab0613470565b60405180608001604052808781526020018881526020018681526020018481525090506000611b156040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c61275c565b9050606060086040519080825280601f01601f191660200182016040528015611b4d5781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a010000000000000000000000000000000000000000000000000000810460228301537901000000000000000000000000000000000000000000000000008104602183015378010000000000000000000000000000000000000000000000008104602083015350611e73828285600160048110611c8c57fe5b6020020151600287600060048110611ca057fe5b60200201516040518082805190602001908083835b60208310611cd85780518252602082019150602081019050602083039250611cb5565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015611d1a573d6000803e3d6000fd5b5050506040513d6020811015611d2f57600080fd5b810190808051906020019092919050505087600260048110611d4d57fe5b60200201516040516020018085805190602001908083835b60208310611d885780518252602082019150602081019050602083039250611d65565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b60208310611dd95780518252602082019150602081019050602083039250611db6565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b60208310611e305780518252602082019150602081019050602083039250611e0d565b6001836020036101000a03801982511681845116808217855250505050505090500194505050505060405160208183030381529060405280519060200120612acb565b8199505050505050505050509392505050565b600080611ea6731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6118cf565b1115611f4857731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611f3f6040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250612ae7565b600190506123da565b6000611f6773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16118cf565b11156120095773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506120006040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250612ae7565b600190506123da565b600061202873b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6118cf565b11156120ca5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506120c16040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250612ae7565b600190506123da565b60006120e973146500cfd35b22e4a392fe0adc06de1a1368ed486118cf565b111561218b5773146500cfd35b22e4a392fe0adc06de1a1368ed48600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506121826040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250612ae7565b600190506123da565b60006121aa73a2998efd205fb9d4b4963afb70778d6354ad3a416118cf565b111561224c5773a2998efd205fb9d4b4963afb70778d6354ad3a41600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506122436040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250612ae7565b600190506123da565b600061226b736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756118cf565b11156122cf57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506123da565b60006122ee7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6118cf565b1115612352577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506123da565b60006123717351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6118cf565b11156123d5577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506123da565b600090505b90565b60008073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061246557506000612463600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166118cf565b145b156124765761247460006118da565b505b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156124e057600080fd5b505af11580156124f4573d6000803e3d6000fd5b505050506040513d602081101561250a57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461265557600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156125d957600080fd5b505af11580156125ed573d6000803e3d6000fd5b505050506040513d602081101561260357600080fd5b8101908080519060200190929190505050600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156126bd57600080fd5b505afa1580156126d1573d6000803e3d6000fd5b505050506040513d60208110156126e757600080fd5b8101908080519060200190929190505050905090565b606060008285019050808451101561271457600080fd5b600086602001905060008460200190505b86886020010182101561274d5781890151808288015250602082019150602081019050612725565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806127e4575060006127e2600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166118cf565b145b156127f5576127f360006118da565b505b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561285f57600080fd5b505af1158015612873573d6000803e3d6000fd5b505050506040513d602081101561288957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146129d457600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561295857600080fd5b505af115801561296c573d6000803e3d6000fd5b505050506040513d602081101561298257600080fd5b8101908080519060200190929190505050600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60606004604051908082528060200260200182016040528015612a0b57816020015b60608152602001906001900390816129f65790505b50905083600060048110612a1b57fe5b602002015181600081518110612a2d57fe5b602002602001018190525083600160048110612a4557fe5b602002015181600181518110612a5757fe5b602002602001018190525083600260048110612a6f57fe5b602002015181600281518110612a8157fe5b602002602001018190525083600360048110612a9957fe5b602002015181600381518110612aab57fe5b6020026020010181905250612ac1858285612b01565b9150509392505050565b8060076000848152602001908152602001600020819055505050565b8060069080519060200190612afd929190613497565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480612b8957506000612b87600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166118cf565b145b15612b9a57612b9860006118da565b505b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612c0457600080fd5b505af1158015612c18573d6000803e3d6000fd5b505050506040513d6020811015612c2e57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612d7957600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612cfd57600080fd5b505af1158015612d11573d6000803e3d6000fd5b505050506040513d6020811015612d2757600080fd5b8101908080519060200190929190505050600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612e10578082015181840152602081019050612df5565b50505050905090810190601f168015612e3d5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015612e5d57600080fd5b505af1158015612e71573d6000803e3d6000fd5b505050506040513d6020811015612e8757600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115612eba576000801b915050613060565b6060612ec585613067565b9050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015612f6a578082015181840152602081019050612f4f565b50505050905090810190601f168015612f975780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015612fd0578082015181840152602081019050612fb5565b50505050905090810190601f168015612ffd5780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b15801561301f57600080fd5b505af1158015613033573d6000803e3d6000fd5b50505050506040513d602081101561304a57600080fd5b8101908080519060200190929190505050925050505b9392505050565b60606130716130e7565b613079613517565b613085816104006130f3565b61308e8161313d565b60008090505b83518110156130d0576130c38482815181106130ac57fe5b60200260200101518361314b90919063ffffffff16565b8080600101915050613094565b506130da81613170565b8060000151915050919050565b60405180590338823950565b600081905060006020828161310457fe5b061461311d576020818161311457fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b61314881600461317e565b50565b613158826002835161319f565b61316b81836132df90919063ffffffff16565b505050565b61317b81600761317e565b50565b61319b601f60058360ff16901b178361338a90919063ffffffff16565b5050565b601781116131cb576131c68160058460ff16901b60ff16178461338a90919063ffffffff16565b6132da565b60ff811161320c576131f0601860058460ff16901b178461338a90919063ffffffff16565b613206816001856133ca9092919063ffffffff16565b506132d9565b61ffff811161324e57613232601960058460ff16901b178461338a90919063ffffffff16565b613248816002856133ca9092919063ffffffff16565b506132d8565b63ffffffff811161329257613276601a60058460ff16901b178461338a90919063ffffffff16565b61328c816004856133ca9092919063ffffffff16565b506132d7565b67ffffffffffffffff81116132d6576132be601b60058460ff16901b178461338a90919063ffffffff16565b6132d4816008856133ca9092919063ffffffff16565b505b5b5b5b5b505050565b6132e7613517565b826020015183600001515183510111156133175761331683600261331086602001518651613431565b0261344d565b5b60008060008451905085518051602081830101945086518101825260208701935050505b6020811061335e578151835260208301925060208201915060208103905061333b565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b816020015160018360000151510111156133b0576133af82600284602001510261344d565b5b815180516020818301018381536001820183525050505050565b6133d2613517565b836020015184600001515183011115613400576133ff8460026133f9876020015186613431565b0261344d565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b60008183111561344357829050613447565b8190505b92915050565b60608260000151905061346083836130f3565b61346a83826132df565b50505050565b60405180608001604052806004905b606081526020019060019003908161347f5790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106134d857805160ff1916838001178555613506565b82800160010185558215613506579182015b828111156135055782518255916020019190600101906134ea565b5b5090506135139190613531565b5090565b604051806040016040528060608152602001600081525090565b61355391905b8082111561354f576000816000905550600101613537565b5090565b9056fe736f7272792c206e6f7420656e6f756768206d6f6e657920696e207468652062616e6b6e6f7420656e6f7567682066756e6473207472616e7361637465642c206e656564206174206c656173744e6f7420656e6f7567682066756e647320696e207468652062616e6b20746f207061796f7574a265627a7a7231582021c426cf761e9701318635dde56159514ebe9057ba88c85ca1b92f6da973bf3e64736f6c634300050c0032",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c8063853828b61161008a578063b69ef8a811610059578063b69ef8a8146104a8578063c38a8afd146104d3578063d0e30db0146104fe578063dc34b0aa1461051c576100e8565b8063853828b6146103d45780638772ae3c146103ff5780638cf4dbfb1461043a5780638da5cb5b14610451576100e8565b806338bbfa50116100c657806338bbfa501461021f57806343d726d614610388578063797778361461039f578063799ae223146103ca576100e8565b806302e4af01146100ed57806327dc297e1461010b5780632e1a7d4d146101dd575b600080fd5b6100f5610547565b6040518082815260200191505060405180910390f35b34801561011757600080fd5b506101db6004803603604081101561012e57600080fd5b81019080803590602001909291908035906020019064010000000081111561015557600080fd5b82018360208201111561016757600080fd5b8035906020019184600183028401116401000000008311171561018957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061060e565b005b610209600480360360208110156101f357600080fd5b8101908080359060200190929190505050610651565b6040518082815260200191505060405180910390f35b34801561022b57600080fd5b506103866004803603606081101561024257600080fd5b81019080803590602001909291908035906020019064010000000081111561026957600080fd5b82018360208201111561027b57600080fd5b8035906020019184600183028401116401000000008311171561029d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561030057600080fd5b82018360208201111561031257600080fd5b8035906020019184600183028401116401000000008311171561033457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610763565b005b34801561039457600080fd5b5061039d610ab1565b005b3480156103ab57600080fd5b506103b4610b8c565b6040518082815260200191505060405180910390f35b6103d2610bd8565b005b3480156103e057600080fd5b506103e9610d41565b6040518082815260200191505060405180910390f35b34801561040b57600080fd5b506104386004803603602081101561042257600080fd5b8101908080359060200190929190505050610e14565b005b34801561044657600080fd5b5061044f610ee0565b005b34801561045d57600080fd5b50610466610f7f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104b457600080fd5b506104bd610fa4565b6040518082815260200191505060405180910390f35b3480156104df57600080fd5b506104e8610faa565b6040518082815260200191505060405180910390f35b610506610fb0565b6040518082815260200191505060405180910390f35b34801561052857600080fd5b506105316110c5565b6040518082815260200191505060405180910390f35b600061058b6040518060400160405280600681526020017f72616e646f6d000000000000000000000000000000000000000000000000000081525062030d406110cb565b60015411610601576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6e6f7420656e6f7567682066756e647320666f722070726f7661626c6500000081525060200191505060405180910390fd5b610609611468565b905090565b61064d828260006040519080825280601f01601f1916602001820160405280156106475781602001600182028038833980820191505090505b50610763565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610715576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f6f6e6c792061636365737320666f7220746865206f776e65720000000000000081525060200191505060405180910390fd5b7fcdbda4692d85c08dcb06ba853dfb15e5ebba5ef0479978e04f493ec12c2eb1646001546040518082815260200191505060405180910390a161075882336114ec565b506001549050919050565b61076b6115af565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461080b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f696e636f7272656374206164647265737300000000000000000000000000000081525060200191505060405180910390fd5b60006002836040516020018082805190602001908083835b602083106108465780518252602082019150602081019050602083039250610823565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c8161088b57fe5b069050806009819055507fc13d60fe9dffdb6908d2d446cd18134373a51db0738ee04f296eeb9128121cbc816040518082815260200191505060405180910390a16000600a60008681526020019081526020016000209050600a6000868152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090555050600080831490508015610a0a576002826001015402600360008460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401600360008460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b7fb4ad5da395d3bba1535d767dbfc8e03665526a0ce05f69252d142015895f28fa8260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836001015483604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390a1505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b73576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f6f6e6c792061636365737320666f7220746865206f776e65720000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b600080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508091505090565b60025480341015610c34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061357a602a913960400191505060405180910390fd5b346001541015610c8f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806135576023913960400191505060405180910390fd5b346001600082825401925050819055506000610ca9610547565b905060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200134815250600a600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f6f6e6c792061636365737320666f7220746865206f776e65720000000000000081525060200191505060405180910390fd5b610e10600154610651565b5090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ed6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f6f6e6c792061636365737320666f7220746865206f776e65720000000000000081525060200191505060405180910390fd5b8060028190555050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115610f7c57610f3781336114ec565b50600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090555b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611074576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f6f6e6c792061636365737320666f7220746865206f776e65720000000000000081525060200191505060405180910390fd5b7f60a44ec1e34e2d6bd511ca26c0918fe4ca6cd0e8ade53c85ef9048b355cc41996001546040518082815260200191505060405180910390a134600160008282540192505081905550600154905090565b60095481565b60008073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061115357506000611151600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166118cf565b145b156111645761116260006118da565b505b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156111ce57600080fd5b505af11580156111e2573d6000803e3d6000fd5b505050506040513d60208110156111f857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461134357600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156112c757600080fd5b505af11580156112db573d6000803e3d6000fd5b505050506040513d60208110156112f157600080fd5b8101908080519060200190929190505050600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc84846040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156113d85780820151818401526020810190506113bd565b50505050905090810190601f1680156114055780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561142557600080fd5b505af1158015611439573d6000803e3d6000fd5b505050506040513d602081101561144f57600080fd5b8101908080519060200190929190505050905092915050565b60008061147b6000600162030d406118eb565b90507f94f2559b5e2b297de3db1587daf2352e872ada3dad01dab9ee3733592fa22ed36040518080602001828103825260178152602001807f50726f7661626c65207175657279207761732073656e7400000000000000000081525060200191505060405180910390a18091505090565b6000826001541015611549576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806135a46026913960400191505060405180910390fd5b6000839050836001600082825403925050819055508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156115a4573d6000803e3d6000fd5b508091505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061163757506000611635600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166118cf565b145b156116485761164660006118da565b505b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156116b257600080fd5b505af11580156116c6573d6000803e3d6000fd5b505050506040513d60208110156116dc57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461182757600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156117ab57600080fd5b505af11580156117bf573d6000803e3d6000fd5b505050506040513d60208110156117d557600080fd5b8101908080519060200190929190505050600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561188f57600080fd5b505afa1580156118a3573d6000803e3d6000fd5b505050506040513d60208110156118b957600080fd5b8101908080519060200190929190505050905090565b6000813b9050919050565b60006118e4611e86565b9050919050565b600080831180156118fd575060208311155b61190657600080fd5b600a84029350606060016040519080825280601f01601f1916602001820160405280156119425781602001600182028038833980820191505090505b5090508360f81b8160008151811061195657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f1916602001820160405280156119bb5781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f1916602001820160405280156119f45781602001600182028038833980820191505090505b5090506000611a016123dd565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f191660200182016040528015611a555781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f191660200182016040528015611a945781602001600182028038833980820191505090505b509050611aa782601860088460006126fd565b50611ab0613470565b60405180608001604052808781526020018881526020018681526020018481525090506000611b156040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c61275c565b9050606060086040519080825280601f01601f191660200182016040528015611b4d5781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a010000000000000000000000000000000000000000000000000000810460228301537901000000000000000000000000000000000000000000000000008104602183015378010000000000000000000000000000000000000000000000008104602083015350611e73828285600160048110611c8c57fe5b6020020151600287600060048110611ca057fe5b60200201516040518082805190602001908083835b60208310611cd85780518252602082019150602081019050602083039250611cb5565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015611d1a573d6000803e3d6000fd5b5050506040513d6020811015611d2f57600080fd5b810190808051906020019092919050505087600260048110611d4d57fe5b60200201516040516020018085805190602001908083835b60208310611d885780518252602082019150602081019050602083039250611d65565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b60208310611dd95780518252602082019150602081019050602083039250611db6565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b60208310611e305780518252602082019150602081019050602083039250611e0d565b6001836020036101000a03801982511681845116808217855250505050505090500194505050505060405160208183030381529060405280519060200120612acb565b8199505050505050505050509392505050565b600080611ea6731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6118cf565b1115611f4857731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611f3f6040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250612ae7565b600190506123da565b6000611f6773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16118cf565b11156120095773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506120006040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250612ae7565b600190506123da565b600061202873b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6118cf565b11156120ca5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506120c16040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250612ae7565b600190506123da565b60006120e973146500cfd35b22e4a392fe0adc06de1a1368ed486118cf565b111561218b5773146500cfd35b22e4a392fe0adc06de1a1368ed48600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506121826040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250612ae7565b600190506123da565b60006121aa73a2998efd205fb9d4b4963afb70778d6354ad3a416118cf565b111561224c5773a2998efd205fb9d4b4963afb70778d6354ad3a41600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506122436040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250612ae7565b600190506123da565b600061226b736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756118cf565b11156122cf57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506123da565b60006122ee7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6118cf565b1115612352577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506123da565b60006123717351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6118cf565b11156123d5577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506123da565b600090505b90565b60008073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061246557506000612463600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166118cf565b145b156124765761247460006118da565b505b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156124e057600080fd5b505af11580156124f4573d6000803e3d6000fd5b505050506040513d602081101561250a57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461265557600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156125d957600080fd5b505af11580156125ed573d6000803e3d6000fd5b505050506040513d602081101561260357600080fd5b8101908080519060200190929190505050600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156126bd57600080fd5b505afa1580156126d1573d6000803e3d6000fd5b505050506040513d60208110156126e757600080fd5b8101908080519060200190929190505050905090565b606060008285019050808451101561271457600080fd5b600086602001905060008460200190505b86886020010182101561274d5781890151808288015250602082019150602081019050612725565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806127e4575060006127e2600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166118cf565b145b156127f5576127f360006118da565b505b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561285f57600080fd5b505af1158015612873573d6000803e3d6000fd5b505050506040513d602081101561288957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146129d457600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561295857600080fd5b505af115801561296c573d6000803e3d6000fd5b505050506040513d602081101561298257600080fd5b8101908080519060200190929190505050600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60606004604051908082528060200260200182016040528015612a0b57816020015b60608152602001906001900390816129f65790505b50905083600060048110612a1b57fe5b602002015181600081518110612a2d57fe5b602002602001018190525083600160048110612a4557fe5b602002015181600181518110612a5757fe5b602002602001018190525083600260048110612a6f57fe5b602002015181600281518110612a8157fe5b602002602001018190525083600360048110612a9957fe5b602002015181600381518110612aab57fe5b6020026020010181905250612ac1858285612b01565b9150509392505050565b8060076000848152602001908152602001600020819055505050565b8060069080519060200190612afd929190613497565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480612b8957506000612b87600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166118cf565b145b15612b9a57612b9860006118da565b505b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612c0457600080fd5b505af1158015612c18573d6000803e3d6000fd5b505050506040513d6020811015612c2e57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612d7957600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612cfd57600080fd5b505af1158015612d11573d6000803e3d6000fd5b505050506040513d6020811015612d2757600080fd5b8101908080519060200190929190505050600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612e10578082015181840152602081019050612df5565b50505050905090810190601f168015612e3d5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015612e5d57600080fd5b505af1158015612e71573d6000803e3d6000fd5b505050506040513d6020811015612e8757600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115612eba576000801b915050613060565b6060612ec585613067565b9050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015612f6a578082015181840152602081019050612f4f565b50505050905090810190601f168015612f975780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015612fd0578082015181840152602081019050612fb5565b50505050905090810190601f168015612ffd5780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b15801561301f57600080fd5b505af1158015613033573d6000803e3d6000fd5b50505050506040513d602081101561304a57600080fd5b8101908080519060200190929190505050925050505b9392505050565b60606130716130e7565b613079613517565b613085816104006130f3565b61308e8161313d565b60008090505b83518110156130d0576130c38482815181106130ac57fe5b60200260200101518361314b90919063ffffffff16565b8080600101915050613094565b506130da81613170565b8060000151915050919050565b60405180590338823950565b600081905060006020828161310457fe5b061461311d576020818161311457fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b61314881600461317e565b50565b613158826002835161319f565b61316b81836132df90919063ffffffff16565b505050565b61317b81600761317e565b50565b61319b601f60058360ff16901b178361338a90919063ffffffff16565b5050565b601781116131cb576131c68160058460ff16901b60ff16178461338a90919063ffffffff16565b6132da565b60ff811161320c576131f0601860058460ff16901b178461338a90919063ffffffff16565b613206816001856133ca9092919063ffffffff16565b506132d9565b61ffff811161324e57613232601960058460ff16901b178461338a90919063ffffffff16565b613248816002856133ca9092919063ffffffff16565b506132d8565b63ffffffff811161329257613276601a60058460ff16901b178461338a90919063ffffffff16565b61328c816004856133ca9092919063ffffffff16565b506132d7565b67ffffffffffffffff81116132d6576132be601b60058460ff16901b178461338a90919063ffffffff16565b6132d4816008856133ca9092919063ffffffff16565b505b5b5b5b5b505050565b6132e7613517565b826020015183600001515183510111156133175761331683600261331086602001518651613431565b0261344d565b5b60008060008451905085518051602081830101945086518101825260208701935050505b6020811061335e578151835260208301925060208201915060208103905061333b565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b816020015160018360000151510111156133b0576133af82600284602001510261344d565b5b815180516020818301018381536001820183525050505050565b6133d2613517565b836020015184600001515183011115613400576133ff8460026133f9876020015186613431565b0261344d565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b60008183111561344357829050613447565b8190505b92915050565b60608260000151905061346083836130f3565b61346a83826132df565b50505050565b60405180608001604052806004905b606081526020019060019003908161347f5790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106134d857805160ff1916838001178555613506565b82800160010185558215613506579182015b828111156135055782518255916020019190600101906134ea565b5b5090506135139190613531565b5090565b604051806040016040528060608152602001600081525090565b61355391905b8082111561354f576000816000905550600101613537565b5090565b9056fe736f7272792c206e6f7420656e6f756768206d6f6e657920696e207468652062616e6b6e6f7420656e6f7567682066756e6473207472616e7361637465642c206e656564206174206c656173744e6f7420656e6f7567682066756e647320696e207468652062616e6b20746f207061796f7574a265627a7a7231582021c426cf761e9701318635dde56159514ebe9057ba88c85ca1b92f6da973bf3e64736f6c634300050c0032",
  "sourceMap": "99:2240:1:-;;;229:12:0;201:40;;672:55:1;8:9:-1;5:2;;;30:1;27;20:12;5:2;672:55:1;247:10:3;239:5;;:18;;;;;;;;;;;;;;;;;;361:9:0;351:7;:19;;;;703:17:1;:15;;;:17;;:::i;:::-;;99:2240;;2023:314;2067:7;2086:15;2104:140;529:1;481;572:6;2104:25;;;:140;;:::i;:::-;2086:158;;2260:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2323:7;2316:14;;;2023:314;:::o;45048:2642:4:-;45150:16;45197:1;45187:7;:11;45186:32;;;;;45215:2;45204:7;:13;;45186:32;45178:41;;;;;;45239:2;45229:12;;;;45297:19;45329:1;45319:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45319:12:4;;;;45297:34;;45364:7;45353:20;;45341:6;45348:1;45341:9;;;;;;;;;;;:32;;;;;;;;;;;45383:19;45415:2;45405:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45405:13:4;;;;45383:35;;45428:27;45468:2;45458:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45458:13:4;;;;45428:43;;45481:30;45514:40;:38;;;:40;;:::i;:::-;45481:73;;45602:4;45594:6;45587:20;45949:9;45939:8;45935:24;45930:1;45922:6;45918:14;45908:25;45904:56;45897:4;45889:6;45885:17;45878:83;45997:4;45981:14;45974:28;46049:22;46042:4;46026:14;46022:25;46015:57;46091:18;46122:2;46112:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46112:13:4;;;;46091:34;;46183:6;46176:4;46169:5;46165:16;46158:32;46209:25;46247:1;46237:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46237:12:4;;;;46209:40;;46259;46269:5;46276:2;46280:1;46283:12;46297:1;46259:9;;;:40;;:::i;:::-;;46309:20;;:::i;:::-;:62;;;;;;;;46333:6;46309:62;;;;46341:6;46309:62;;;;46349:14;46309:62;;;;46365:5;46309:62;;;;;46381:15;46399:47;;;;;;;;;;;;;;;;;;46424:4;46430:15;46399:14;;;:47;;:::i;:::-;46381:65;;46456:30;46499:1;46489:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46489:12:4;;;;46456:45;;46567:4;46553:12;46549:23;46543:30;46631:65;46628:1;46624:73;46617:4;46598:17;46594:28;46586:112;46756:63;46753:1;46749:71;46742:4;46723:17;46719:28;46711:110;46879:61;46876:1;46872:69;46865:4;46846:17;46842:28;46834:108;47000:59;46997:1;46993:67;46986:4;46967:17;46963:28;46955:106;47119:57;47116:1;47112:65;47105:4;47086:17;47082:28;47074:104;47236:55;47233:1;47229:63;47222:4;47203:17;47199:28;47191:102;47351:53;47348:1;47344:61;47337:4;47318:17;47314:28;47306:100;47464:51;47461:1;47457:59;47450:4;47431:17;47427:28;47419:98;46520:1007;47536:123;47568:7;47604:17;47623:4;47628:1;47623:7;;;;;;;;;;;47632:15;47639:4;47644:1;47639:7;;;;;;;;;;;47632:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47632:15:4;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;47632:15:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;47632:15:4;;;;;;;;;;;;;;;;47649:4;47654:1;47649:7;;;;;;;;;;;47587:70;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47587:70:4;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47587:70:4;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47587:70:4;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;47587:70:4;;;47577:81;;;;;;47536:31;;;:123;;:::i;:::-;47676:7;47669:14;;;;;;;;;;;45048:2642;;;;;:::o;37638:169::-;37718:23;11893:1;11869:26;;11877:3;;;;;;;;;;;11869:26;;;11868:64;;;;11930:1;11901:25;11921:3;;;;;;;;;;;11901:11;;;:25;;:::i;:::-;:30;11868:64;11864:130;;;11948:35;11525:1;11948:19;;;:35;;:::i;:::-;;11864:130;12028:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12028:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12028:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12028:16:4;;;;;;;;;;;;;;;;12007:37;;12015:8;;;;;;;;;;;12007:37;;;12003:106;;12081:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12081:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12081:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12081:16:4;;;;;;;;;;;;;;;;12060:8;;:38;;;;;;;;;;;;;;;;;;12003:106;37760:8;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37760:40:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37760:40:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;37760:40:4;;;;;;;;;;;;;;;;37753:47;;37638:169;:::o;54341:693::-;54469:25;54506:14;54533:9;54523:7;:19;54506:36;;54574:9;54560:3;:10;:23;;54552:32;;;;;;54639:6;54653:11;54648:2;:16;54639:25;;54755:6;54769:9;54764:2;:14;54755:23;;54788:220;54819:7;54805:11;54800:2;:16;:26;54795:1;:32;54788:220;;;54898:1;54891:5;54887:13;54881:20;54938:3;54934:1;54929:3;54925:11;54918:24;54852:104;54974:2;54969:7;;;;54995:2;54990:7;;;;54788:220;;;55024:3;55017:10;;;;;54341:693;;;;;;;:::o;35043:377::-;35163:11;11893:1;11869:26;;11877:3;;;;;;;;;;;11869:26;;;11868:64;;;;11930:1;11901:25;11921:3;;;;;;;;;;;11901:11;;;:25;;:::i;:::-;:30;11868:64;11864:130;;;11948:35;11525:1;11948:19;;;:35;;:::i;:::-;;11864:130;12028:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12028:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12028:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12028:16:4;;;;;;;;;;;;;;;;12007:37;;12015:8;;;;;;;;;;;12007:37;;;12003:106;;12081:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12081:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12081:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12081:16:4;;;;;;;;;;;;;;;;12060:8;;:38;;;;;;;;;;;;;;;;;;12003:106;35186:22;35223:1;35211:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35186:39;;35248:5;35254:1;35248:8;;;;;;;;;;;35235:7;35243:1;35235:10;;;;;;;;;;;;;:21;;;;35279:5;35285:1;35279:8;;;;;;;;;;;35266:7;35274:1;35266:10;;;;;;;;;;;;;:21;;;;35310:5;35316:1;35310:8;;;;;;;;;;;35297:7;35305:1;35297:10;;;;;;;;;;;;;:21;;;;35341:5;35347:1;35341:8;;;;;;;;;;;35328:7;35336:1;35328:10;;;;;;;;;;;;;:21;;;;35366:47;35381:11;35394:7;35403:9;35366:14;;;:47;;:::i;:::-;35359:54;;;35043:377;;;;;:::o;47696:152::-;47830:11;47795:22;:32;47818:8;47795:32;;;;;;;;;;;:46;;;;47696:152;;:::o;37345:147::-;37404:10;37470:5;37458:18;37449:27;;37435:51;;;:::o;12601:205::-;12666:16;12778:21;:19;;;:21;;:::i;:::-;12771:28;;12601:205;;;:::o;29566:454::-;29685:11;11893:1;11869:26;;11877:3;;;;;;;;;;;11869:26;;;11868:64;;;;11930:1;11901:25;11921:3;;;;;;;;;;;11901:11;;;:25;;:::i;:::-;:30;11868:64;11864:130;;;11948:35;11525:1;11948:19;;;:35;;:::i;:::-;;11864:130;12028:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12028:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12028:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12028:16:4;;;;;;;;;;;;;;;;12007:37;;12015:8;;;;;;;;;;;12007:37;;;12003:106;;12081:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12081:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12081:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12081:16:4;;;;;;;;;;;;;;;;12060:8;;:38;;;;;;;;;;;;;;;;;;12003:106;29708:10;29721:8;;;;;;;;;;;:17;;;29739:11;29752:9;29721:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;29721:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29721:41:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29721:41:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;29721:41:4;;;;;;;;;;;;;;;;29708:54;;29808:9;29794:11;:23;29784:7;:33;29776:5;:41;29772:107;;;29840:1;29833:8;;;;;;;29772:107;29888:17;29908:14;29916:5;29908:7;;;:14;;:::i;:::-;29888:34;;29939:8;;;;;;;;;;;:28;;;29974:5;29981:1;29984:11;29997:4;30003:9;29939:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;29939:74:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;29939:74:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29939:74:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29939:74:4;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;29939:74:4;;;;;;;;;;;;;;;;29932:81;;;;12118:1;29566:454;;;;;:::o;13080:2031::-;13129:16;13219:1;13161:55;13173:42;13161:11;;;:55;;:::i;:::-;:59;13157:246;;;13272:42;13246:3;;:69;;;;;;;;;;;;;;;;;;13329:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;13388:4;13381:11;;;;13157:246;13474:1;13416:55;13428:42;13416:11;;;:55;;:::i;:::-;:59;13412:255;;;13535:42;13509:3;;:69;;;;;;;;;;;;;;;;;;13592:39;;;;;;;;;;;;;;;;;;:23;;;:39;;:::i;:::-;13652:4;13645:11;;;;13412:255;13738:1;13680:55;13692:42;13680:11;;;:55;;:::i;:::-;:59;13676:250;;;13797:42;13771:3;;:69;;;;;;;;;;;;;;;;;;13854:36;;;;;;;;;;;;;;;;;;:23;;;:36;;:::i;:::-;13911:4;13904:11;;;;13676:250;13997:1;13939:55;13951:42;13939:11;;;:55;;:::i;:::-;:59;13935:254;;;14058:42;14032:3;;:69;;;;;;;;;;;;;;;;;;14115:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;14174:4;14167:11;;;;13935:254;14260:1;14202:55;14214:42;14202:11;;;:55;;:::i;:::-;:59;14198:252;;;14320:42;14294:3;;:69;;;;;;;;;;;;;;;;;;14377:37;;;;;;;;;;;;;;;;;;:23;;;:37;;:::i;:::-;14435:4;14428:11;;;;14198:252;14521:1;14463:55;14475:42;14463:11;;;:55;;:::i;:::-;:59;14459:202;;;14582:42;14556:3;;:69;;;;;;;;;;;;;;;;;;14646:4;14639:11;;;;14459:202;14732:1;14674:55;14686:42;14674:11;;;:55;;:::i;:::-;:59;14670:201;;;14792:42;14766:3;;:69;;;;;;;;;;;;;;;;;;14856:4;14849:11;;;;14670:201;14942:1;14884:55;14896:42;14884:11;;;:55;;:::i;:::-;:59;14880:203;;;15004:42;14978:3;;:69;;;;;;;;;;;;;;;;;;15068:4;15061:11;;;;14880:203;15099:5;15092:12;;13080:2031;;:::o;44677:365::-;44738:26;44776:19;:17;;;:19;;:::i;:::-;44805:24;;:::i;:::-;44839:22;44851:3;44856:4;44839:11;;;;;:22;;:::i;:::-;44871:16;:3;:14;;;;;:16;;:::i;:::-;44902:6;44911:1;44902:10;;44897:88;44918:4;:11;44914:1;:15;44897:88;;;44950:24;44966:4;44971:1;44966:7;;;;;;;;;;;;;;44950:3;:15;;;;;;:24;;;;:::i;:::-;44931:3;;;;;;;44897:88;;;;44994:17;:3;:15;;;;;:17;;:::i;:::-;45028:3;:7;;;45021:14;;;44677:365;;;:::o;12812:125::-;12917:13;12893:21;:37;;;;;;;;;;;;:::i;:::-;;12812:125;:::o;57908:170::-;58002:4;57996:11;58056:4;58049:5;58045:16;58035:8;58029:4;58020:42;57970:102;:::o;4286:434::-;4360:13;4376:9;4360:25;;4416:1;4410:2;4399:8;:13;;;;;;:18;4395:81;;4462:2;4451:8;:13;;;;;;4445:2;:20;4433:32;;;;4395:81;4501:8;4485:4;:13;;:24;;;;;4597:4;4591:11;4628:3;4622:4;4615:17;4657:1;4652:3;4645:14;4694:8;4689:3;4685:18;4679:4;4672:32;4566:148;;;;:::o;10519:128::-;10590:50;10617:4;8675:1;10590:26;;;:50;;:::i;:::-;10519:128;:::o;10134:178::-;10227:49;10238:4;8626:1;10262:6;:13;10227:10;;;:49;;:::i;:::-;10286:19;10298:6;10286:4;:11;;;;;;:19;;;;:::i;:::-;;10134:178;;:::o;10783:136::-;10855:57;10882:4;8837:1;10855:26;;;:57;;:::i;:::-;10783:136;:::o;9573:145::-;9673:38;9707:2;9702:1;9692:6;:11;;;;9691:18;9673:4;:11;;;;;;:38;;;;:::i;:::-;9573:145;;:::o;8845:722::-;8956:2;8946:6;:12;8942:619;;8974:42;9008:6;9003:1;8993:6;:11;;;;8992:22;;;8974:4;:11;;;;;;:42;;;;:::i;:::-;8942:619;;;9047:4;9037:6;:14;9033:528;;9067:38;9101:2;9096:1;9086:6;:11;;;;9085:18;9067:4;:11;;;;;;:38;;;;:::i;:::-;9119:25;9134:6;9142:1;9119:4;:14;;;;;;:25;;;;;:::i;:::-;;9033:528;;;9175:6;9165;:16;9161:400;;9197:38;9231:2;9226:1;9216:6;:11;;;;9215:18;9197:4;:11;;;;;;:38;;;;:::i;:::-;9249:25;9264:6;9272:1;9249:4;:14;;;;;;:25;;;;;:::i;:::-;;9161:400;;;9305:10;9295:6;:20;9291:270;;9331:38;9365:2;9360:1;9350:6;:11;;;;9349:18;9331:4;:11;;;;;;:38;;;;:::i;:::-;9383:25;9398:6;9406:1;9383:4;:14;;;;;;:25;;;;;:::i;:::-;;9291:270;;;9439:18;9429:6;:28;9425:136;;9473:38;9507:2;9502:1;9492:6;:11;;;;9491:18;9473:4;:11;;;;;;:38;;;;:::i;:::-;9525:25;9540:6;9548:1;9525:4;:14;;;;;;:25;;;;;:::i;:::-;;9425:136;9291:270;9161:400;9033:528;8942:619;8845:722;;;:::o;5338:1213::-;5417:21;;:::i;:::-;5487:4;:13;;;5469:4;:8;;;:15;5454:5;:12;:30;:46;5450:127;;;5516:50;5523:4;5564:1;5529:32;5533:4;:13;;;5548:5;:12;5529:3;;;:32;;:::i;:::-;:36;5516:6;;;:50;;:::i;:::-;5450:127;5586:9;5605:8;5623;5634:5;:12;5623:23;;5699:4;5693:11;5774:6;5768:13;5861:2;5852:6;5844;5840:19;5836:28;5828:36;;5984:5;5978:12;5970:6;5966:25;5958:6;5951:41;6047:2;6040:5;6036:14;6029:21;;5665:395;;6069:206;6082:2;6075:3;:9;6069:206;;6199:3;6193:10;6187:4;6180:24;6239:2;6231:10;;;;6262:2;6255:9;;;;6093:2;6086:9;;;;6069:206;;;6284:9;6316:1;6309:3;6304:2;:8;6296:3;:17;:21;6284:33;;6409:4;6405:9;6399:3;6393:10;6389:26;6461:4;6454;6448:11;6444:22;6505:7;6495:8;6492:21;6486:4;6479:35;6360:164;;6540:4;6533:11;;;;;;5338:1213;;;;:::o;6835:575::-;6934:4;:13;;;6930:1;6912:4;:8;;;:15;:19;:35;6908:97;;;6963:31;6970:4;6992:1;6976:4;:13;;;:17;6963:6;;;:31;;:::i;:::-;6908:97;7057:4;7051:11;7132:6;7126:13;7223:2;7214:6;7206;7202:19;7198:28;7321:5;7315:4;7307:20;7367:1;7359:6;7355:14;7347:6;7340:30;7023:381;;;;;:::o;7694:735::-;7779:21;;:::i;:::-;7841:4;:13;;;7823:4;:8;;;:15;7816:4;:22;:38;7812:111;;;7870:42;7877:4;7910:1;7883:24;7887:4;:13;;;7902:4;7883:3;;;:24;;:::i;:::-;:28;7870:6;;;:42;;:::i;:::-;7812:111;7932:9;7958:1;7951:4;7944:3;:11;:15;7932:27;;8012:4;8006:11;8087:6;8081:13;8178:4;8169:6;8161;8157:19;8153:30;8315:5;8307:4;8303:9;8296:4;8290:11;8286:27;8283:38;8277:4;8270:52;8362:4;8354:6;8350:17;8342:6;8335:33;7978:424;;;8418:4;8411:11;;;7694:735;;;;;:::o;4905:146::-;4958:9;4988:2;4983;:7;4979:47;;;5013:2;5006:9;;;;4979:47;5042:2;5035:9;;4905:146;;;;;:::o;4726:173::-;4801:19;4823:4;:8;;;4801:30;;4841:21;4846:4;4852:9;4841:4;;;:21;;:::i;:::-;4872:20;4879:4;4885:6;4872;;;:20;;:::i;:::-;;4726:173;;;:::o;99:2240:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "99:2240:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1775:242;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15349:122:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15349:122:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15349:122:4;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15349:122:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15349:122:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15349:122:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15349:122:4;;;;;;;;;;;;;;;:::i;:::-;;1389:222:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1389:222:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1015:754:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1015:754:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1015:754:1;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1015:754:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1015:754:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1015:754:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1015:754:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1015:754:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1015:754:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1015:754:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1015:754:1;;;;;;;;;;;;;;;:::i;:::-;;1786:75:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1786:75:0;;;:::i;:::-;;383:154;;8:9:-1;5:2;;;30:1;27;20:12;5:2;383:154:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;733:276:1;;;:::i;:::-;;1123:92:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1123:92:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1867:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1867:106:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1867:106:0;;;;;;;;;;;;;;;;;:::i;:::-;;883:234;;8:9:-1;5:2;;;30:1;27;20:12;5:2;883:234:0;;;:::i;:::-;;48:20:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;48:20:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;80:22:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;80:22:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;201:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;201:40:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1221:162;;;:::i;:::-;;;;;;;;;;;;;;;;;;;585:27:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;585:27:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1775:242;1825:7;1875:45;;;;;;;;;;;;;;;;;;572:6;1875:17;:45::i;:::-;1865:7;;:55;1844:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1993:17;:15;:17::i;:::-;1986:24;;1775:242;:::o;15349:122:4:-;15424:40;15435:5;15442:7;15461:1;15451:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;15451:12:4;;;;15424:10;:40::i;:::-;15349:122;;:::o;1389:222:0:-;1489:7;128:5:3;;;;;;;;;;;114:19;;:10;:19;;;106:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1517:27:0;1536:7;;1517:27;;;;;;;;;;;;;;;;;;1554:26;1561:6;1569:10;1554:6;:26::i;:::-;;1597:7;;1590:14;;1389:222;;;:::o;1015:754:1:-;1166:20;:18;:20::i;:::-;1152:34;;:10;:34;;;1144:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1218:20;1301:1;1276:7;1259:25;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1259:25:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1259:25:1;;;1249:36;;;;;;1241:45;;:61;;;;;;1218:84;;1328:12;1313;:27;;;;1355:35;1377:12;1355:35;;;;;;;;;;;;;;;;;;1401:15;1419:14;:24;1434:8;1419:24;;;;;;;;;;;1401:42;;1460:14;:24;1475:8;1460:24;;;;;;;;;;;;1453:31;;;;;;;;;;;;;;;;;;;;;;;1494:11;1524:1;1508:12;:17;1494:31;;1540:6;1536:168;;;1692:1;1666:3;:7;;;:27;1614:21;:33;1636:3;:10;;;;;;;;;;;;1614:33;;;;;;;;;;;;;;;;:79;1562:21;:33;1584:3;:10;;;;;;;;;;;;1562:33;;;;;;;;;;;;;;;:131;;;;1536:168;1719:43;1734:3;:10;;;;;;;;;;;;1746:3;:7;;;1755:6;1719:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1015:754;;;;;;:::o;1786:75:0:-;128:5:3;;;;;;;;;;;114:19;;:10;:19;;;106:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1843:10:0;1830:24;;;383:154;440:7;459:13;475:21;:33;497:10;475:33;;;;;;;;;;;;;;;;459:49;;525:5;518:12;;;383:154;:::o;733:276:1:-;774:10;;1690:4:0;1677:9;:17;;1656:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;815:9:1;804:7;;:20;;796:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;885:9;874:7;;:20;;;;;;;;;;;905:15;923:16;:14;:16::i;:::-;905:34;;976:26;;;;;;;;980:10;976:26;;;;;;992:9;976:26;;;950:14;:23;965:7;950:23;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1772:1:0;733:276:1;:::o;1123:92:0:-;1172:7;128:5:3;;;;;;;;;;;114:19;;:10;:19;;;106:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1191:17:0;1200:7;;1191:8;:17::i;:::-;;1123:92;:::o;1867:106::-;128:5:3;;;;;;;;;;;114:19;;:10;:19;;;106:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1953:13:0;1940:10;:26;;;;1867:106;:::o;883:234::-;926:15;944:21;:33;966:10;944:33;;;;;;;;;;;;;;;;926:51;;1002:1;992:7;:11;988:123;;;1019:27;1026:7;1035:10;1019:6;:27::i;:::-;;1067:21;:33;1089:10;1067:33;;;;;;;;;;;;;;;1060:40;;;988:123;883:234;:::o;48:20:3:-;;;;;;;;;;;;;:::o;80:22:0:-;;;;:::o;201:40::-;;;;:::o;1221:162::-;1274:7;128:5:3;;;;;;;;;;;114:19;;:10;:19;;;106:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1298:24:0;1314:7;;1298:24;;;;;;;;;;;;;;;;;;1343:9;1332:7;;:20;;;;;;;;;;;1369:7;;1362:14;;1221:162;:::o;585:27:1:-;;;;:::o;15823:183:4:-;15923:16;11893:1;11869:26;;11877:3;;;;;;;;;;;11869:26;;;11868:64;;;;11930:1;11901:25;11921:3;;;;;;;;;;;11901:11;:25::i;:::-;:30;11868:64;11864:130;;;11948:35;11525:1;11948:19;:35::i;:::-;;11864:130;12028:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12028:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12028:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12028:16:4;;;;;;;;;;;;;;;;12007:37;;12015:8;;;;;;;;;;;12007:37;;;12003:106;;12081:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12081:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12081:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12081:16:4;;;;;;;;;;;;;;;;12060:8;;:38;;;;;;;;;;;;;;;;;;12003:106;15958:8;;;;;;;;;;;:17;;;15976:11;15989:9;15958:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15958:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15958:41:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15958:41:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15958:41:4;;;;;;;;;;;;;;;;15951:48;;15823:183;;;;:::o;2023:314:1:-;2067:7;2086:15;2104:140;529:1;481;572:6;2104:25;:140::i;:::-;2086:158;;2260:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2323:7;2316:14;;;2023:314;:::o;543:334:0:-;629:7;671:6;660:7;;:17;;652:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;731:18;752:6;731:27;;779:6;768:7;;:17;;;;;;;;;;;795:2;:11;;:23;807:10;795:23;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;795:23:0;835:10;828:17;;;543:334;;;;:::o;37209:130:4:-;37269:24;11893:1;11869:26;;11877:3;;;;;;;;;;;11869:26;;;11868:64;;;;11930:1;11901:25;11921:3;;;;;;;;;;;11901:11;:25::i;:::-;:30;11868:64;11864:130;;;11948:35;11525:1;11948:19;:35::i;:::-;;11864:130;12028:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12028:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12028:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12028:16:4;;;;;;;;;;;;;;;;12007:37;;12015:8;;;;;;;;;;;12007:37;;;12003:106;;12081:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12081:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12081:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12081:16:4;;;;;;;;;;;;;;;;12060:8;;:38;;;;;;;;;;;;;;;;;;12003:106;37312:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37312:20:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37312:20:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;37312:20:4;;;;;;;;;;;;;;;;37305:27;;37209:130;:::o;37345:147::-;37404:10;37470:5;37458:18;37449:27;;37435:51;;;:::o;12601:205::-;12666:16;12778:21;:19;:21::i;:::-;12771:28;;12601:205;;;:::o;45048:2642::-;45150:16;45197:1;45187:7;:11;45186:32;;;;;45215:2;45204:7;:13;;45186:32;45178:41;;;;;;45239:2;45229:12;;;;45297:19;45329:1;45319:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45319:12:4;;;;45297:34;;45364:7;45353:20;;45341:6;45348:1;45341:9;;;;;;;;;;;:32;;;;;;;;;;;45383:19;45415:2;45405:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45405:13:4;;;;45383:35;;45428:27;45468:2;45458:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45458:13:4;;;;45428:43;;45481:30;45514:40;:38;:40::i;:::-;45481:73;;45602:4;45594:6;45587:20;45949:9;45939:8;45935:24;45930:1;45922:6;45918:14;45908:25;45904:56;45897:4;45889:6;45885:17;45878:83;45997:4;45981:14;45974:28;46049:22;46042:4;46026:14;46022:25;46015:57;46091:18;46122:2;46112:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46112:13:4;;;;46091:34;;46183:6;46176:4;46169:5;46165:16;46158:32;46209:25;46247:1;46237:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46237:12:4;;;;46209:40;;46259;46269:5;46276:2;46280:1;46283:12;46297:1;46259:9;:40::i;:::-;;46309:20;;:::i;:::-;:62;;;;;;;;46333:6;46309:62;;;;46341:6;46309:62;;;;46349:14;46309:62;;;;46365:5;46309:62;;;;;46381:15;46399:47;;;;;;;;;;;;;;;;;;46424:4;46430:15;46399:14;:47::i;:::-;46381:65;;46456:30;46499:1;46489:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46489:12:4;;;;46456:45;;46567:4;46553:12;46549:23;46543:30;46631:65;46628:1;46624:73;46617:4;46598:17;46594:28;46586:112;46756:63;46753:1;46749:71;46742:4;46723:17;46719:28;46711:110;46879:61;46876:1;46872:69;46865:4;46846:17;46842:28;46834:108;47000:59;46997:1;46993:67;46986:4;46967:17;46963:28;46955:106;47119:57;47116:1;47112:65;47105:4;47086:17;47082:28;47074:104;47236:55;47233:1;47229:63;47222:4;47203:17;47199:28;47191:102;47351:53;47348:1;47344:61;47337:4;47318:17;47314:28;47306:100;47464:51;47461:1;47457:59;47450:4;47431:17;47427:28;47419:98;46520:1007;47536:123;47568:7;47604:17;47623:4;47628:1;47623:7;;;;;;;;;;;47632:15;47639:4;47644:1;47639:7;;;;;;;;;;;47632:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47632:15:4;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;47632:15:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;47632:15:4;;;;;;;;;;;;;;;;47649:4;47654:1;47649:7;;;;;;;;;;;47587:70;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47587:70:4;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47587:70:4;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47587:70:4;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;47587:70:4;;;47577:81;;;;;;47536:31;:123::i;:::-;47676:7;47669:14;;;;;;;;;;;45048:2642;;;;;:::o;13080:2031::-;13129:16;13219:1;13161:55;13173:42;13161:11;:55::i;:::-;:59;13157:246;;;13272:42;13246:3;;:69;;;;;;;;;;;;;;;;;;13329:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13388:4;13381:11;;;;13157:246;13474:1;13416:55;13428:42;13416:11;:55::i;:::-;:59;13412:255;;;13535:42;13509:3;;:69;;;;;;;;;;;;;;;;;;13592:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;13652:4;13645:11;;;;13412:255;13738:1;13680:55;13692:42;13680:11;:55::i;:::-;:59;13676:250;;;13797:42;13771:3;;:69;;;;;;;;;;;;;;;;;;13854:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;13911:4;13904:11;;;;13676:250;13997:1;13939:55;13951:42;13939:11;:55::i;:::-;:59;13935:254;;;14058:42;14032:3;;:69;;;;;;;;;;;;;;;;;;14115:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14174:4;14167:11;;;;13935:254;14260:1;14202:55;14214:42;14202:11;:55::i;:::-;:59;14198:252;;;14320:42;14294:3;;:69;;;;;;;;;;;;;;;;;;14377:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14435:4;14428:11;;;;14198:252;14521:1;14463:55;14475:42;14463:11;:55::i;:::-;:59;14459:202;;;14582:42;14556:3;;:69;;;;;;;;;;;;;;;;;;14646:4;14639:11;;;;14459:202;14732:1;14674:55;14686:42;14674:11;:55::i;:::-;:59;14670:201;;;14792:42;14766:3;;:69;;;;;;;;;;;;;;;;;;14856:4;14849:11;;;;14670:201;14942:1;14884:55;14896:42;14884:11;:55::i;:::-;:59;14880:203;;;15004:42;14978:3;;:69;;;;;;;;;;;;;;;;;;15068:4;15061:11;;;;14880:203;15099:5;15092:12;;13080:2031;;:::o;37638:169::-;37718:23;11893:1;11869:26;;11877:3;;;;;;;;;;;11869:26;;;11868:64;;;;11930:1;11901:25;11921:3;;;;;;;;;;;11901:11;:25::i;:::-;:30;11868:64;11864:130;;;11948:35;11525:1;11948:19;:35::i;:::-;;11864:130;12028:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12028:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12028:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12028:16:4;;;;;;;;;;;;;;;;12007:37;;12015:8;;;;;;;;;;;12007:37;;;12003:106;;12081:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12081:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12081:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12081:16:4;;;;;;;;;;;;;;;;12060:8;;:38;;;;;;;;;;;;;;;;;;12003:106;37760:8;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37760:40:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37760:40:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;37760:40:4;;;;;;;;;;;;;;;;37753:47;;37638:169;:::o;54341:693::-;54469:25;54506:14;54533:9;54523:7;:19;54506:36;;54574:9;54560:3;:10;:23;;54552:32;;;;;;54639:6;54653:11;54648:2;:16;54639:25;;54755:6;54769:9;54764:2;:14;54755:23;;54788:220;54819:7;54805:11;54800:2;:16;:26;54795:1;:32;54788:220;;;54898:1;54891:5;54887:13;54881:20;54938:3;54934:1;54929:3;54925:11;54918:24;54852:104;54974:2;54969:7;;;;54995:2;54990:7;;;;54788:220;;;55024:3;55017:10;;;;;54341:693;;;;;;;:::o;35043:377::-;35163:11;11893:1;11869:26;;11877:3;;;;;;;;;;;11869:26;;;11868:64;;;;11930:1;11901:25;11921:3;;;;;;;;;;;11901:11;:25::i;:::-;:30;11868:64;11864:130;;;11948:35;11525:1;11948:19;:35::i;:::-;;11864:130;12028:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12028:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12028:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12028:16:4;;;;;;;;;;;;;;;;12007:37;;12015:8;;;;;;;;;;;12007:37;;;12003:106;;12081:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12081:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12081:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12081:16:4;;;;;;;;;;;;;;;;12060:8;;:38;;;;;;;;;;;;;;;;;;12003:106;35186:22;35223:1;35211:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35186:39;;35248:5;35254:1;35248:8;;;;;;;;;;;35235:7;35243:1;35235:10;;;;;;;;;;;;;:21;;;;35279:5;35285:1;35279:8;;;;;;;;;;;35266:7;35274:1;35266:10;;;;;;;;;;;;;:21;;;;35310:5;35316:1;35310:8;;;;;;;;;;;35297:7;35305:1;35297:10;;;;;;;;;;;;;:21;;;;35341:5;35347:1;35341:8;;;;;;;;;;;35328:7;35336:1;35328:10;;;;;;;;;;;;;:21;;;;35366:47;35381:11;35394:7;35403:9;35366:14;:47::i;:::-;35359:54;;;35043:377;;;;;:::o;47696:152::-;47830:11;47795:22;:32;47818:8;47795:32;;;;;;;;;;;:46;;;;47696:152;;:::o;12812:125::-;12917:13;12893:21;:37;;;;;;;;;;;;:::i;:::-;;12812:125;:::o;29566:454::-;29685:11;11893:1;11869:26;;11877:3;;;;;;;;;;;11869:26;;;11868:64;;;;11930:1;11901:25;11921:3;;;;;;;;;;;11901:11;:25::i;:::-;:30;11868:64;11864:130;;;11948:35;11525:1;11948:19;:35::i;:::-;;11864:130;12028:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12028:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12028:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12028:16:4;;;;;;;;;;;;;;;;12007:37;;12015:8;;;;;;;;;;;12007:37;;;12003:106;;12081:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12081:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12081:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12081:16:4;;;;;;;;;;;;;;;;12060:8;;:38;;;;;;;;;;;;;;;;;;12003:106;29708:10;29721:8;;;;;;;;;;;:17;;;29739:11;29752:9;29721:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;29721:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29721:41:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29721:41:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;29721:41:4;;;;;;;;;;;;;;;;29708:54;;29808:9;29794:11;:23;29784:7;:33;29776:5;:41;29772:107;;;29840:1;29833:8;;;;;;;29772:107;29888:17;29908:14;29916:5;29908:7;:14::i;:::-;29888:34;;29939:8;;;;;;;;;;;:28;;;29974:5;29981:1;29984:11;29997:4;30003:9;29939:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;29939:74:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;29939:74:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29939:74:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29939:74:4;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;29939:74:4;;;;;;;;;;;;;;;;29932:81;;;;12118:1;29566:454;;;;;:::o;44677:365::-;44738:26;44776:19;:17;:19::i;:::-;44805:24;;:::i;:::-;44839:22;44851:3;44856:4;44839:11;:22::i;:::-;44871:16;:3;:14;:16::i;:::-;44902:6;44911:1;44902:10;;44897:88;44918:4;:11;44914:1;:15;44897:88;;;44950:24;44966:4;44971:1;44966:7;;;;;;;;;;;;;;44950:3;:15;;:24;;;;:::i;:::-;44931:3;;;;;;;44897:88;;;;44994:17;:3;:15;:17::i;:::-;45028:3;:7;;;45021:14;;;44677:365;;;:::o;57908:170::-;58002:4;57996:11;58056:4;58049:5;58045:16;58035:8;58029:4;58020:42;57970:102;:::o;4286:434::-;4360:13;4376:9;4360:25;;4416:1;4410:2;4399:8;:13;;;;;;:18;4395:81;;4462:2;4451:8;:13;;;;;;4445:2;:20;4433:32;;;;4395:81;4501:8;4485:4;:13;;:24;;;;;4597:4;4591:11;4628:3;4622:4;4615:17;4657:1;4652:3;4645:14;4694:8;4689:3;4685:18;4679:4;4672:32;4566:148;;;;:::o;10519:128::-;10590:50;10617:4;8675:1;10590:26;:50::i;:::-;10519:128;:::o;10134:178::-;10227:49;10238:4;8626:1;10262:6;:13;10227:10;:49::i;:::-;10286:19;10298:6;10286:4;:11;;:19;;;;:::i;:::-;;10134:178;;:::o;10783:136::-;10855:57;10882:4;8837:1;10855:26;:57::i;:::-;10783:136;:::o;9573:145::-;9673:38;9707:2;9702:1;9692:6;:11;;;;9691:18;9673:4;:11;;:38;;;;:::i;:::-;9573:145;;:::o;8845:722::-;8956:2;8946:6;:12;8942:619;;8974:42;9008:6;9003:1;8993:6;:11;;;;8992:22;;;8974:4;:11;;:42;;;;:::i;:::-;8942:619;;;9047:4;9037:6;:14;9033:528;;9067:38;9101:2;9096:1;9086:6;:11;;;;9085:18;9067:4;:11;;:38;;;;:::i;:::-;9119:25;9134:6;9142:1;9119:4;:14;;:25;;;;;:::i;:::-;;9033:528;;;9175:6;9165;:16;9161:400;;9197:38;9231:2;9226:1;9216:6;:11;;;;9215:18;9197:4;:11;;:38;;;;:::i;:::-;9249:25;9264:6;9272:1;9249:4;:14;;:25;;;;;:::i;:::-;;9161:400;;;9305:10;9295:6;:20;9291:270;;9331:38;9365:2;9360:1;9350:6;:11;;;;9349:18;9331:4;:11;;:38;;;;:::i;:::-;9383:25;9398:6;9406:1;9383:4;:14;;:25;;;;;:::i;:::-;;9291:270;;;9439:18;9429:6;:28;9425:136;;9473:38;9507:2;9502:1;9492:6;:11;;;;9491:18;9473:4;:11;;:38;;;;:::i;:::-;9525:25;9540:6;9548:1;9525:4;:14;;:25;;;;;:::i;:::-;;9425:136;9291:270;9161:400;9033:528;8942:619;8845:722;;;:::o;5338:1213::-;5417:21;;:::i;:::-;5487:4;:13;;;5469:4;:8;;;:15;5454:5;:12;:30;:46;5450:127;;;5516:50;5523:4;5564:1;5529:32;5533:4;:13;;;5548:5;:12;5529:3;:32::i;:::-;:36;5516:6;:50::i;:::-;5450:127;5586:9;5605:8;5623;5634:5;:12;5623:23;;5699:4;5693:11;5774:6;5768:13;5861:2;5852:6;5844;5840:19;5836:28;5828:36;;5984:5;5978:12;5970:6;5966:25;5958:6;5951:41;6047:2;6040:5;6036:14;6029:21;;5665:395;;6069:206;6082:2;6075:3;:9;6069:206;;6199:3;6193:10;6187:4;6180:24;6239:2;6231:10;;;;6262:2;6255:9;;;;6093:2;6086:9;;;;6069:206;;;6284:9;6316:1;6309:3;6304:2;:8;6296:3;:17;:21;6284:33;;6409:4;6405:9;6399:3;6393:10;6389:26;6461:4;6454;6448:11;6444:22;6505:7;6495:8;6492:21;6486:4;6479:35;6360:164;;6540:4;6533:11;;;;;;5338:1213;;;;:::o;6835:575::-;6934:4;:13;;;6930:1;6912:4;:8;;;:15;:19;:35;6908:97;;;6963:31;6970:4;6992:1;6976:4;:13;;;:17;6963:6;:31::i;:::-;6908:97;7057:4;7051:11;7132:6;7126:13;7223:2;7214:6;7206;7202:19;7198:28;7321:5;7315:4;7307:20;7367:1;7359:6;7355:14;7347:6;7340:30;7023:381;;;;;:::o;7694:735::-;7779:21;;:::i;:::-;7841:4;:13;;;7823:4;:8;;;:15;7816:4;:22;:38;7812:111;;;7870:42;7877:4;7910:1;7883:24;7887:4;:13;;;7902:4;7883:3;:24::i;:::-;:28;7870:6;:42::i;:::-;7812:111;7932:9;7958:1;7951:4;7944:3;:11;:15;7932:27;;8012:4;8006:11;8087:6;8081:13;8178:4;8169:6;8161;8157:19;8153:30;8315:5;8307:4;8303:9;8296:4;8290:11;8286:27;8283:38;8277:4;8270:52;8362:4;8354:6;8350:17;8342:6;8335:33;7978:424;;;8418:4;8411:11;;;7694:735;;;;;:::o;4905:146::-;4958:9;4988:2;4983;:7;4979:47;;;5013:2;5006:9;;;;4979:47;5042:2;5035:9;;4905:146;;;;;:::o;4726:173::-;4801:19;4823:4;:8;;;4801:30;;4841:21;4846:4;4852:9;4841:4;:21::i;:::-;4872:20;4879:4;4885:6;4872;:20::i;:::-;;4726:173;;;:::o;99:2240:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.5.12;\n\nimport \"./Ownable.sol\";\nimport \"./Bank.sol\";\nimport \"./provableAPI.sol\";\n\ncontract CoinFlip is Ownable, Bank, usingProvable {\n    struct Bet {\n        address sender;\n        uint256 bet;\n    }\n\n    event coinFlipResult(address caller, uint256 amount, bool won);\n    event logNewProvableQuery(string message);\n    event generatedRandomNumber(uint256 number);\n\n    uint256 constant MAX_INT_FROM_BYTE = 256;\n    uint256 constant NUM_RANDOM_BYTES_REQUESTED = 1;\n    uint256 constant QUERY_EXECUTION_DELAY = 0;\n    uint256 constant GAS_FOR_CALLBACK = 200000;\n\n    uint256 public latestNumber;\n\n    mapping(bytes32 => Bet) private pendingQueries;\n\n    constructor() public {\n        _generateRandom();\n    }\n\n    function flipCoin() public payable costs(minimumBet) {\n        require(balance >= msg.value, \"sorry, not enough money in the bank\");\n        balance += msg.value;\n\n        bytes32 queryId = generateRandom();\n\n        pendingQueries[queryId] = Bet(msg.sender, msg.value);\n    }\n\n    function __callback(\n        bytes32 _queryId,\n        string memory _result,\n        bytes memory _proof\n    ) public {\n        require(msg.sender == provable_cbAddress(), \"incorrect address\");\n        uint256 randomNumber = uint256(keccak256(abi.encodePacked(_result))) %\n            2;\n\n        latestNumber = randomNumber;\n        emit generatedRandomNumber(randomNumber);\n\n        Bet storage bet = pendingQueries[_queryId];\n        delete pendingQueries[_queryId];\n        bool hasWon = randomNumber == 0;\n\n        if (hasWon) {\n            balancesToBeCollected[bet.sender] =\n                balancesToBeCollected[bet.sender] +\n                bet.bet *\n                2;\n        }\n\n        emit coinFlipResult(bet.sender, bet.bet, hasWon);\n    }\n\n    function generateRandom() public payable returns (bytes32) {\n        require(\n            balance > provable_getPrice(\"random\", GAS_FOR_CALLBACK),\n            \"not enough funds for provable\"\n        );\n\n        return _generateRandom();\n    }\n\n    function _generateRandom() private returns (bytes32) {\n        bytes32 queryId = provable_newRandomDSQuery(\n            QUERY_EXECUTION_DELAY,\n            NUM_RANDOM_BYTES_REQUESTED,\n            GAS_FOR_CALLBACK\n        );\n\n        emit logNewProvableQuery(\"Provable query was sent\");\n        return queryId;\n    }\n}\n",
  "sourcePath": "/Users/ernowever/Development/Ethereum 201/CoinFlip/smart-contracts/contracts/CoinFlip.sol",
  "ast": {
    "absolutePath": "/Users/ernowever/Development/Ethereum 201/CoinFlip/smart-contracts/contracts/CoinFlip.sol",
    "exportedSymbols": {
      "CoinFlip": [413]
    },
    "id": 414,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 199,
        "literals": ["solidity", "0.5", ".12"],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/ernowever/Development/Ethereum 201/CoinFlip/smart-contracts/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 200,
        "nodeType": "ImportDirective",
        "scope": 414,
        "sourceUnit": 477,
        "src": "25:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ernowever/Development/Ethereum 201/CoinFlip/smart-contracts/contracts/Bank.sol",
        "file": "./Bank.sol",
        "id": 201,
        "nodeType": "ImportDirective",
        "scope": 414,
        "sourceUnit": 198,
        "src": "49:20:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ernowever/Development/Ethereum 201/CoinFlip/smart-contracts/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 202,
        "nodeType": "ImportDirective",
        "scope": 414,
        "sourceUnit": 6773,
        "src": "70:27:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 203,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 476,
              "src": "120:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$476",
                "typeString": "contract Ownable"
              }
            },
            "id": 204,
            "nodeType": "InheritanceSpecifier",
            "src": "120:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 205,
              "name": "Bank",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 197,
              "src": "129:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Bank_$197",
                "typeString": "contract Bank"
              }
            },
            "id": 206,
            "nodeType": "InheritanceSpecifier",
            "src": "129:4:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 207,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6772,
              "src": "135:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6772",
                "typeString": "contract usingProvable"
              }
            },
            "id": 208,
            "nodeType": "InheritanceSpecifier",
            "src": "135:13:1"
          }
        ],
        "contractDependencies": [197, 476, 6772],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 413,
        "linearizedBaseContracts": [413, 6772, 197, 476],
        "name": "CoinFlip",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "CoinFlip.Bet",
            "id": 213,
            "members": [
              {
                "constant": false,
                "id": 210,
                "name": "sender",
                "nodeType": "VariableDeclaration",
                "scope": 213,
                "src": "176:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 209,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "176:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 212,
                "name": "bet",
                "nodeType": "VariableDeclaration",
                "scope": 213,
                "src": "200:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 211,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "200:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Bet",
            "nodeType": "StructDefinition",
            "scope": 413,
            "src": "155:63:1",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 221,
            "name": "coinFlipResult",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "indexed": false,
                  "name": "caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "245:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "245:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 217,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "261:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 219,
                  "indexed": false,
                  "name": "won",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "277:8:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "277:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "244:42:1"
            },
            "src": "224:63:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 225,
            "name": "logNewProvableQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 223,
                  "indexed": false,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "318:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "318:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "317:16:1"
            },
            "src": "292:42:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 229,
            "name": "generatedRandomNumber",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "indexed": false,
                  "name": "number",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "367:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "367:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "366:16:1"
            },
            "src": "339:44:1"
          },
          {
            "constant": true,
            "id": 232,
            "name": "MAX_INT_FROM_BYTE",
            "nodeType": "VariableDeclaration",
            "scope": 413,
            "src": "389:40:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 230,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "389:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "323536",
              "id": 231,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "426:3:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_256_by_1",
                "typeString": "int_const 256"
              },
              "value": "256"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 235,
            "name": "NUM_RANDOM_BYTES_REQUESTED",
            "nodeType": "VariableDeclaration",
            "scope": 413,
            "src": "435:47:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 233,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "435:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 234,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "481:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 238,
            "name": "QUERY_EXECUTION_DELAY",
            "nodeType": "VariableDeclaration",
            "scope": 413,
            "src": "488:42:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 236,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "488:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 237,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "529:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 241,
            "name": "GAS_FOR_CALLBACK",
            "nodeType": "VariableDeclaration",
            "scope": 413,
            "src": "536:42:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 239,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "536:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "323030303030",
              "id": 240,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "572:6:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_200000_by_1",
                "typeString": "int_const 200000"
              },
              "value": "200000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 243,
            "name": "latestNumber",
            "nodeType": "VariableDeclaration",
            "scope": 413,
            "src": "585:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 242,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "585:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 247,
            "name": "pendingQueries",
            "nodeType": "VariableDeclaration",
            "scope": 413,
            "src": "619:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$213_storage_$",
              "typeString": "mapping(bytes32 => struct CoinFlip.Bet)"
            },
            "typeName": {
              "id": 246,
              "keyType": {
                "id": 244,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "627:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "619:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$213_storage_$",
                "typeString": "mapping(bytes32 => struct CoinFlip.Bet)"
              },
              "valueType": {
                "contractScope": null,
                "id": 245,
                "name": "Bet",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 213,
                "src": "638:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Bet_$213_storage_ptr",
                  "typeString": "struct CoinFlip.Bet"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 253,
              "nodeType": "Block",
              "src": "693:34:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 250,
                      "name": "_generateRandom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 412,
                      "src": "703:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes32_$",
                        "typeString": "function () returns (bytes32)"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "703:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 252,
                  "nodeType": "ExpressionStatement",
                  "src": "703:17:1"
                }
              ]
            },
            "documentation": null,
            "id": 254,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "683:2:1"
            },
            "returnParameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "693:0:1"
            },
            "scope": 413,
            "src": "672:55:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 289,
              "nodeType": "Block",
              "src": "786:223:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 261,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "804:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 262,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6787,
                            "src": "815:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "815:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "804:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "736f7272792c206e6f7420656e6f756768206d6f6e657920696e207468652062616e6b",
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "826:37:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_212add086030122c1c7df660dd92125ab2929bf7b673cb2bb05fb3fed38d328b",
                          "typeString": "literal_string \"sorry, not enough money in the bank\""
                        },
                        "value": "sorry, not enough money in the bank"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_212add086030122c1c7df660dd92125ab2929bf7b673cb2bb05fb3fed38d328b",
                          "typeString": "literal_string \"sorry, not enough money in the bank\""
                        }
                      ],
                      "id": 260,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [6790, 6791],
                      "referencedDeclaration": 6791,
                      "src": "796:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "796:68:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "796:68:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 268,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "874:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 269,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6787,
                        "src": "885:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "885:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "874:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "874:20:1"
                },
                {
                  "assignments": [274],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 274,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 289,
                      "src": "905:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 273,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "905:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 277,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 275,
                      "name": "generateRandom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "923:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes32_$",
                        "typeString": "function () returns (bytes32)"
                      }
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "923:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "905:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 278,
                        "name": "pendingQueries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "950:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$213_storage_$",
                          "typeString": "mapping(bytes32 => struct CoinFlip.Bet storage ref)"
                        }
                      },
                      "id": 280,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 279,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 274,
                        "src": "965:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "950:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bet_$213_storage",
                        "typeString": "struct CoinFlip.Bet storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 282,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6787,
                            "src": "980:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "980:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 284,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6787,
                            "src": "992:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "992:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 281,
                        "name": "Bet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "976:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Bet_$213_storage_ptr_$",
                          "typeString": "type(struct CoinFlip.Bet storage pointer)"
                        }
                      },
                      "id": 286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "976:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bet_$213_memory",
                        "typeString": "struct CoinFlip.Bet memory"
                      }
                    },
                    "src": "950:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bet_$213_storage",
                      "typeString": "struct CoinFlip.Bet storage ref"
                    }
                  },
                  "id": 288,
                  "nodeType": "ExpressionStatement",
                  "src": "950:52:1"
                }
              ]
            },
            "documentation": null,
            "id": 290,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 257,
                    "name": "minimumBet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17,
                    "src": "774:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 258,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 256,
                  "name": "costs",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 173,
                  "src": "768:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "768:17:1"
              }
            ],
            "name": "flipCoin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "750:2:1"
            },
            "returnParameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "786:0:1"
            },
            "scope": 413,
            "src": "733:276:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 372,
              "nodeType": "Block",
              "src": "1134:635:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 300,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6787,
                            "src": "1152:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1152:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 302,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4595,
                            "src": "1166:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1166:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1152:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e636f72726563742061646472657373",
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1188:19:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a80e73987d7ce50b493d439f893e18393676240c3a019ce1ad68821d718fecd6",
                          "typeString": "literal_string \"incorrect address\""
                        },
                        "value": "incorrect address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a80e73987d7ce50b493d439f893e18393676240c3a019ce1ad68821d718fecd6",
                          "typeString": "literal_string \"incorrect address\""
                        }
                      ],
                      "id": 299,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [6790, 6791],
                      "referencedDeclaration": 6791,
                      "src": "1144:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1144:64:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:64:1"
                },
                {
                  "assignments": [309],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 309,
                      "name": "randomNumber",
                      "nodeType": "VariableDeclaration",
                      "scope": 372,
                      "src": "1218:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 308,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1218:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 320,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 314,
                                  "name": "_result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 294,
                                  "src": "1276:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 312,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6774,
                                  "src": "1259:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1259:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1259:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 311,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6781,
                            "src": "1249:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1249:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1241:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1241:45:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1301:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "1241:61:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1218:84:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 321,
                      "name": "latestNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 243,
                      "src": "1313:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 322,
                      "name": "randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "1328:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1313:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "1313:27:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 326,
                        "name": "randomNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "1377:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 325,
                      "name": "generatedRandomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "1355:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1355:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 328,
                  "nodeType": "EmitStatement",
                  "src": "1350:40:1"
                },
                {
                  "assignments": [330],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 330,
                      "name": "bet",
                      "nodeType": "VariableDeclaration",
                      "scope": 372,
                      "src": "1401:15:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bet_$213_storage_ptr",
                        "typeString": "struct CoinFlip.Bet"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 329,
                        "name": "Bet",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 213,
                        "src": "1401:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bet_$213_storage_ptr",
                          "typeString": "struct CoinFlip.Bet"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 334,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 331,
                      "name": "pendingQueries",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "1419:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$213_storage_$",
                        "typeString": "mapping(bytes32 => struct CoinFlip.Bet storage ref)"
                      }
                    },
                    "id": 333,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 332,
                      "name": "_queryId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 292,
                      "src": "1434:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1419:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bet_$213_storage",
                      "typeString": "struct CoinFlip.Bet storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1401:42:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1453:31:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 335,
                        "name": "pendingQueries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "1460:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$213_storage_$",
                          "typeString": "mapping(bytes32 => struct CoinFlip.Bet storage ref)"
                        }
                      },
                      "id": 337,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 336,
                        "name": "_queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 292,
                        "src": "1475:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1460:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bet_$213_storage",
                        "typeString": "struct CoinFlip.Bet storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "1453:31:1"
                },
                {
                  "assignments": [341],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 341,
                      "name": "hasWon",
                      "nodeType": "VariableDeclaration",
                      "scope": 372,
                      "src": "1494:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 340,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1494:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 345,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 342,
                      "name": "randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "1508:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1524:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1508:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1494:31:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 346,
                    "name": "hasWon",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 341,
                    "src": "1540:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 363,
                  "nodeType": "IfStatement",
                  "src": "1536:168:1",
                  "trueBody": {
                    "id": 362,
                    "nodeType": "Block",
                    "src": "1548:156:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 347,
                              "name": "balancesToBeCollected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "1562:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 350,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 348,
                                "name": "bet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 330,
                                "src": "1584:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Bet_$213_storage_ptr",
                                  "typeString": "struct CoinFlip.Bet storage pointer"
                                }
                              },
                              "id": 349,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 210,
                              "src": "1584:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1562:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 351,
                                "name": "balancesToBeCollected",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21,
                                "src": "1614:21:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 354,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 352,
                                  "name": "bet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 330,
                                  "src": "1636:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Bet_$213_storage_ptr",
                                    "typeString": "struct CoinFlip.Bet storage pointer"
                                  }
                                },
                                "id": 353,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 210,
                                "src": "1636:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1614:33:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 355,
                                  "name": "bet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 330,
                                  "src": "1666:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Bet_$213_storage_ptr",
                                    "typeString": "struct CoinFlip.Bet storage pointer"
                                  }
                                },
                                "id": 356,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "bet",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 212,
                                "src": "1666:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1692:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "1666:27:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1614:79:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1562:131:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 361,
                        "nodeType": "ExpressionStatement",
                        "src": "1562:131:1"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 365,
                          "name": "bet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 330,
                          "src": "1734:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bet_$213_storage_ptr",
                            "typeString": "struct CoinFlip.Bet storage pointer"
                          }
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 210,
                        "src": "1734:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 367,
                          "name": "bet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 330,
                          "src": "1746:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bet_$213_storage_ptr",
                            "typeString": "struct CoinFlip.Bet storage pointer"
                          }
                        },
                        "id": 368,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 212,
                        "src": "1746:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 369,
                        "name": "hasWon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "1755:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 364,
                      "name": "coinFlipResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 221,
                      "src": "1719:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,bool)"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1719:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 371,
                  "nodeType": "EmitStatement",
                  "src": "1714:48:1"
                }
              ]
            },
            "documentation": null,
            "id": 373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 292,
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "1044:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 291,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1044:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 294,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "1070:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1070:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 296,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "1101:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 295,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1101:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1034:92:1"
            },
            "returnParameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1134:0:1"
            },
            "scope": 413,
            "src": "1015:754:1",
            "stateMutability": "nonpayable",
            "superFunction": 1525,
            "visibility": "public"
          },
          {
            "body": {
              "id": 391,
              "nodeType": "Block",
              "src": "1834:183:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 379,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "1865:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "72616e646f6d",
                              "id": 381,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1893:8:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a4896a3f93bf4bf58378e579f3cf193bb4af1022af7d2089f37d8bae7157b85f",
                                "typeString": "literal_string \"random\""
                              },
                              "value": "random"
                            },
                            {
                              "argumentTypes": null,
                              "id": 382,
                              "name": "GAS_FOR_CALLBACK",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 241,
                              "src": "1903:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_a4896a3f93bf4bf58378e579f3cf193bb4af1022af7d2089f37d8bae7157b85f",
                                "typeString": "literal_string \"random\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 380,
                            "name": "provable_getPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [1540, 1558],
                            "referencedDeclaration": 1558,
                            "src": "1875:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (string memory,uint256) returns (uint256)"
                            }
                          },
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1875:45:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1865:55:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f7567682066756e647320666f722070726f7661626c65",
                        "id": 385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1934:31:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c0346f9a1952aac61702647c4caaddba5ffb5c88fb507e251877d5c8b314e43",
                          "typeString": "literal_string \"not enough funds for provable\""
                        },
                        "value": "not enough funds for provable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c0346f9a1952aac61702647c4caaddba5ffb5c88fb507e251877d5c8b314e43",
                          "typeString": "literal_string \"not enough funds for provable\""
                        }
                      ],
                      "id": 378,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [6790, 6791],
                      "referencedDeclaration": 6791,
                      "src": "1844:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1844:131:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "1844:131:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 388,
                      "name": "_generateRandom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 412,
                      "src": "1993:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes32_$",
                        "typeString": "function () returns (bytes32)"
                      }
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1993:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 377,
                  "id": 390,
                  "nodeType": "Return",
                  "src": "1986:24:1"
                }
              ]
            },
            "documentation": null,
            "id": 392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateRandom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1798:2:1"
            },
            "returnParameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 376,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "1825:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 375,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1825:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1824:9:1"
            },
            "scope": 413,
            "src": "1775:242:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 411,
              "nodeType": "Block",
              "src": "2076:261:1",
              "statements": [
                {
                  "assignments": [398],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 398,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 411,
                      "src": "2086:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 397,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2086:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 404,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 400,
                        "name": "QUERY_EXECUTION_DELAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "2143:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 401,
                        "name": "NUM_RANDOM_BYTES_REQUESTED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "2178:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 402,
                        "name": "GAS_FOR_CALLBACK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 241,
                        "src": "2218:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 399,
                      "name": "provable_newRandomDSQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5874,
                      "src": "2104:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                      }
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2104:140:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2086:158:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f7661626c65207175657279207761732073656e74",
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2280:25:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c6004b51e60ff3f05f040f48924e80a9ec7ffbf1c4efd4c0e7b941b51325b9f",
                          "typeString": "literal_string \"Provable query was sent\""
                        },
                        "value": "Provable query was sent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8c6004b51e60ff3f05f040f48924e80a9ec7ffbf1c4efd4c0e7b941b51325b9f",
                          "typeString": "literal_string \"Provable query was sent\""
                        }
                      ],
                      "id": 405,
                      "name": "logNewProvableQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "2260:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2260:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 408,
                  "nodeType": "EmitStatement",
                  "src": "2255:51:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 409,
                    "name": "queryId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 398,
                    "src": "2323:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 396,
                  "id": 410,
                  "nodeType": "Return",
                  "src": "2316:14:1"
                }
              ]
            },
            "documentation": null,
            "id": 412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_generateRandom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2047:2:1"
            },
            "returnParameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 395,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "2067:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2067:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2066:9:1"
            },
            "scope": 413,
            "src": "2023:314:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 414,
        "src": "99:2240:1"
      }
    ],
    "src": "0:2340:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/ernowever/Development/Ethereum 201/CoinFlip/smart-contracts/contracts/CoinFlip.sol",
    "exportedSymbols": {
      "CoinFlip": [413]
    },
    "id": 414,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 199,
        "literals": ["solidity", "0.5", ".12"],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/ernowever/Development/Ethereum 201/CoinFlip/smart-contracts/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 200,
        "nodeType": "ImportDirective",
        "scope": 414,
        "sourceUnit": 477,
        "src": "25:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ernowever/Development/Ethereum 201/CoinFlip/smart-contracts/contracts/Bank.sol",
        "file": "./Bank.sol",
        "id": 201,
        "nodeType": "ImportDirective",
        "scope": 414,
        "sourceUnit": 198,
        "src": "49:20:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ernowever/Development/Ethereum 201/CoinFlip/smart-contracts/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 202,
        "nodeType": "ImportDirective",
        "scope": 414,
        "sourceUnit": 6773,
        "src": "70:27:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 203,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 476,
              "src": "120:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$476",
                "typeString": "contract Ownable"
              }
            },
            "id": 204,
            "nodeType": "InheritanceSpecifier",
            "src": "120:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 205,
              "name": "Bank",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 197,
              "src": "129:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Bank_$197",
                "typeString": "contract Bank"
              }
            },
            "id": 206,
            "nodeType": "InheritanceSpecifier",
            "src": "129:4:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 207,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6772,
              "src": "135:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6772",
                "typeString": "contract usingProvable"
              }
            },
            "id": 208,
            "nodeType": "InheritanceSpecifier",
            "src": "135:13:1"
          }
        ],
        "contractDependencies": [197, 476, 6772],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 413,
        "linearizedBaseContracts": [413, 6772, 197, 476],
        "name": "CoinFlip",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "CoinFlip.Bet",
            "id": 213,
            "members": [
              {
                "constant": false,
                "id": 210,
                "name": "sender",
                "nodeType": "VariableDeclaration",
                "scope": 213,
                "src": "176:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 209,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "176:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 212,
                "name": "bet",
                "nodeType": "VariableDeclaration",
                "scope": 213,
                "src": "200:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 211,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "200:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Bet",
            "nodeType": "StructDefinition",
            "scope": 413,
            "src": "155:63:1",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 221,
            "name": "coinFlipResult",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "indexed": false,
                  "name": "caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "245:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "245:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 217,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "261:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 219,
                  "indexed": false,
                  "name": "won",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "277:8:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "277:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "244:42:1"
            },
            "src": "224:63:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 225,
            "name": "logNewProvableQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 223,
                  "indexed": false,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "318:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "318:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "317:16:1"
            },
            "src": "292:42:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 229,
            "name": "generatedRandomNumber",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "indexed": false,
                  "name": "number",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "367:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "367:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "366:16:1"
            },
            "src": "339:44:1"
          },
          {
            "constant": true,
            "id": 232,
            "name": "MAX_INT_FROM_BYTE",
            "nodeType": "VariableDeclaration",
            "scope": 413,
            "src": "389:40:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 230,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "389:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "323536",
              "id": 231,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "426:3:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_256_by_1",
                "typeString": "int_const 256"
              },
              "value": "256"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 235,
            "name": "NUM_RANDOM_BYTES_REQUESTED",
            "nodeType": "VariableDeclaration",
            "scope": 413,
            "src": "435:47:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 233,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "435:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 234,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "481:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 238,
            "name": "QUERY_EXECUTION_DELAY",
            "nodeType": "VariableDeclaration",
            "scope": 413,
            "src": "488:42:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 236,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "488:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 237,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "529:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 241,
            "name": "GAS_FOR_CALLBACK",
            "nodeType": "VariableDeclaration",
            "scope": 413,
            "src": "536:42:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 239,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "536:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "323030303030",
              "id": 240,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "572:6:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_200000_by_1",
                "typeString": "int_const 200000"
              },
              "value": "200000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 243,
            "name": "latestNumber",
            "nodeType": "VariableDeclaration",
            "scope": 413,
            "src": "585:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 242,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "585:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 247,
            "name": "pendingQueries",
            "nodeType": "VariableDeclaration",
            "scope": 413,
            "src": "619:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$213_storage_$",
              "typeString": "mapping(bytes32 => struct CoinFlip.Bet)"
            },
            "typeName": {
              "id": 246,
              "keyType": {
                "id": 244,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "627:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "619:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$213_storage_$",
                "typeString": "mapping(bytes32 => struct CoinFlip.Bet)"
              },
              "valueType": {
                "contractScope": null,
                "id": 245,
                "name": "Bet",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 213,
                "src": "638:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Bet_$213_storage_ptr",
                  "typeString": "struct CoinFlip.Bet"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 253,
              "nodeType": "Block",
              "src": "693:34:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 250,
                      "name": "_generateRandom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 412,
                      "src": "703:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes32_$",
                        "typeString": "function () returns (bytes32)"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "703:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 252,
                  "nodeType": "ExpressionStatement",
                  "src": "703:17:1"
                }
              ]
            },
            "documentation": null,
            "id": 254,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "683:2:1"
            },
            "returnParameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "693:0:1"
            },
            "scope": 413,
            "src": "672:55:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 289,
              "nodeType": "Block",
              "src": "786:223:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 261,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "804:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 262,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6787,
                            "src": "815:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "815:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "804:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "736f7272792c206e6f7420656e6f756768206d6f6e657920696e207468652062616e6b",
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "826:37:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_212add086030122c1c7df660dd92125ab2929bf7b673cb2bb05fb3fed38d328b",
                          "typeString": "literal_string \"sorry, not enough money in the bank\""
                        },
                        "value": "sorry, not enough money in the bank"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_212add086030122c1c7df660dd92125ab2929bf7b673cb2bb05fb3fed38d328b",
                          "typeString": "literal_string \"sorry, not enough money in the bank\""
                        }
                      ],
                      "id": 260,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [6790, 6791],
                      "referencedDeclaration": 6791,
                      "src": "796:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "796:68:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "796:68:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 268,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "874:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 269,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6787,
                        "src": "885:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "885:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "874:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "874:20:1"
                },
                {
                  "assignments": [274],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 274,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 289,
                      "src": "905:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 273,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "905:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 277,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 275,
                      "name": "generateRandom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "923:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes32_$",
                        "typeString": "function () returns (bytes32)"
                      }
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "923:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "905:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 278,
                        "name": "pendingQueries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "950:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$213_storage_$",
                          "typeString": "mapping(bytes32 => struct CoinFlip.Bet storage ref)"
                        }
                      },
                      "id": 280,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 279,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 274,
                        "src": "965:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "950:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bet_$213_storage",
                        "typeString": "struct CoinFlip.Bet storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 282,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6787,
                            "src": "980:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "980:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 284,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6787,
                            "src": "992:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "992:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 281,
                        "name": "Bet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "976:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Bet_$213_storage_ptr_$",
                          "typeString": "type(struct CoinFlip.Bet storage pointer)"
                        }
                      },
                      "id": 286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "976:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bet_$213_memory",
                        "typeString": "struct CoinFlip.Bet memory"
                      }
                    },
                    "src": "950:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bet_$213_storage",
                      "typeString": "struct CoinFlip.Bet storage ref"
                    }
                  },
                  "id": 288,
                  "nodeType": "ExpressionStatement",
                  "src": "950:52:1"
                }
              ]
            },
            "documentation": null,
            "id": 290,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 257,
                    "name": "minimumBet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17,
                    "src": "774:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 258,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 256,
                  "name": "costs",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 173,
                  "src": "768:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "768:17:1"
              }
            ],
            "name": "flipCoin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "750:2:1"
            },
            "returnParameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "786:0:1"
            },
            "scope": 413,
            "src": "733:276:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 372,
              "nodeType": "Block",
              "src": "1134:635:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 300,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6787,
                            "src": "1152:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1152:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 302,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4595,
                            "src": "1166:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1166:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1152:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e636f72726563742061646472657373",
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1188:19:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a80e73987d7ce50b493d439f893e18393676240c3a019ce1ad68821d718fecd6",
                          "typeString": "literal_string \"incorrect address\""
                        },
                        "value": "incorrect address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a80e73987d7ce50b493d439f893e18393676240c3a019ce1ad68821d718fecd6",
                          "typeString": "literal_string \"incorrect address\""
                        }
                      ],
                      "id": 299,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [6790, 6791],
                      "referencedDeclaration": 6791,
                      "src": "1144:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1144:64:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:64:1"
                },
                {
                  "assignments": [309],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 309,
                      "name": "randomNumber",
                      "nodeType": "VariableDeclaration",
                      "scope": 372,
                      "src": "1218:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 308,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1218:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 320,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 314,
                                  "name": "_result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 294,
                                  "src": "1276:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 312,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6774,
                                  "src": "1259:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1259:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1259:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 311,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6781,
                            "src": "1249:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1249:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1241:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1241:45:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1301:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "1241:61:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1218:84:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 321,
                      "name": "latestNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 243,
                      "src": "1313:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 322,
                      "name": "randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "1328:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1313:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "1313:27:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 326,
                        "name": "randomNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "1377:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 325,
                      "name": "generatedRandomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "1355:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1355:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 328,
                  "nodeType": "EmitStatement",
                  "src": "1350:40:1"
                },
                {
                  "assignments": [330],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 330,
                      "name": "bet",
                      "nodeType": "VariableDeclaration",
                      "scope": 372,
                      "src": "1401:15:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bet_$213_storage_ptr",
                        "typeString": "struct CoinFlip.Bet"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 329,
                        "name": "Bet",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 213,
                        "src": "1401:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bet_$213_storage_ptr",
                          "typeString": "struct CoinFlip.Bet"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 334,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 331,
                      "name": "pendingQueries",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "1419:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$213_storage_$",
                        "typeString": "mapping(bytes32 => struct CoinFlip.Bet storage ref)"
                      }
                    },
                    "id": 333,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 332,
                      "name": "_queryId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 292,
                      "src": "1434:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1419:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bet_$213_storage",
                      "typeString": "struct CoinFlip.Bet storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1401:42:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1453:31:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 335,
                        "name": "pendingQueries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "1460:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$213_storage_$",
                          "typeString": "mapping(bytes32 => struct CoinFlip.Bet storage ref)"
                        }
                      },
                      "id": 337,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 336,
                        "name": "_queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 292,
                        "src": "1475:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1460:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bet_$213_storage",
                        "typeString": "struct CoinFlip.Bet storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "1453:31:1"
                },
                {
                  "assignments": [341],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 341,
                      "name": "hasWon",
                      "nodeType": "VariableDeclaration",
                      "scope": 372,
                      "src": "1494:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 340,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1494:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 345,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 342,
                      "name": "randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "1508:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1524:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1508:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1494:31:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 346,
                    "name": "hasWon",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 341,
                    "src": "1540:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 363,
                  "nodeType": "IfStatement",
                  "src": "1536:168:1",
                  "trueBody": {
                    "id": 362,
                    "nodeType": "Block",
                    "src": "1548:156:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 347,
                              "name": "balancesToBeCollected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "1562:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 350,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 348,
                                "name": "bet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 330,
                                "src": "1584:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Bet_$213_storage_ptr",
                                  "typeString": "struct CoinFlip.Bet storage pointer"
                                }
                              },
                              "id": 349,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 210,
                              "src": "1584:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1562:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 351,
                                "name": "balancesToBeCollected",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21,
                                "src": "1614:21:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 354,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 352,
                                  "name": "bet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 330,
                                  "src": "1636:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Bet_$213_storage_ptr",
                                    "typeString": "struct CoinFlip.Bet storage pointer"
                                  }
                                },
                                "id": 353,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 210,
                                "src": "1636:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1614:33:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 355,
                                  "name": "bet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 330,
                                  "src": "1666:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Bet_$213_storage_ptr",
                                    "typeString": "struct CoinFlip.Bet storage pointer"
                                  }
                                },
                                "id": 356,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "bet",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 212,
                                "src": "1666:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1692:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "1666:27:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1614:79:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1562:131:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 361,
                        "nodeType": "ExpressionStatement",
                        "src": "1562:131:1"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 365,
                          "name": "bet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 330,
                          "src": "1734:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bet_$213_storage_ptr",
                            "typeString": "struct CoinFlip.Bet storage pointer"
                          }
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 210,
                        "src": "1734:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 367,
                          "name": "bet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 330,
                          "src": "1746:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bet_$213_storage_ptr",
                            "typeString": "struct CoinFlip.Bet storage pointer"
                          }
                        },
                        "id": 368,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 212,
                        "src": "1746:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 369,
                        "name": "hasWon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "1755:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 364,
                      "name": "coinFlipResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 221,
                      "src": "1719:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,bool)"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1719:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 371,
                  "nodeType": "EmitStatement",
                  "src": "1714:48:1"
                }
              ]
            },
            "documentation": null,
            "id": 373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 292,
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "1044:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 291,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1044:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 294,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "1070:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1070:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 296,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "1101:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 295,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1101:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1034:92:1"
            },
            "returnParameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1134:0:1"
            },
            "scope": 413,
            "src": "1015:754:1",
            "stateMutability": "nonpayable",
            "superFunction": 1525,
            "visibility": "public"
          },
          {
            "body": {
              "id": 391,
              "nodeType": "Block",
              "src": "1834:183:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 379,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "1865:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "72616e646f6d",
                              "id": 381,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1893:8:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a4896a3f93bf4bf58378e579f3cf193bb4af1022af7d2089f37d8bae7157b85f",
                                "typeString": "literal_string \"random\""
                              },
                              "value": "random"
                            },
                            {
                              "argumentTypes": null,
                              "id": 382,
                              "name": "GAS_FOR_CALLBACK",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 241,
                              "src": "1903:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_a4896a3f93bf4bf58378e579f3cf193bb4af1022af7d2089f37d8bae7157b85f",
                                "typeString": "literal_string \"random\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 380,
                            "name": "provable_getPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [1540, 1558],
                            "referencedDeclaration": 1558,
                            "src": "1875:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (string memory,uint256) returns (uint256)"
                            }
                          },
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1875:45:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1865:55:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f7567682066756e647320666f722070726f7661626c65",
                        "id": 385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1934:31:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c0346f9a1952aac61702647c4caaddba5ffb5c88fb507e251877d5c8b314e43",
                          "typeString": "literal_string \"not enough funds for provable\""
                        },
                        "value": "not enough funds for provable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c0346f9a1952aac61702647c4caaddba5ffb5c88fb507e251877d5c8b314e43",
                          "typeString": "literal_string \"not enough funds for provable\""
                        }
                      ],
                      "id": 378,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [6790, 6791],
                      "referencedDeclaration": 6791,
                      "src": "1844:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1844:131:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "1844:131:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 388,
                      "name": "_generateRandom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 412,
                      "src": "1993:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes32_$",
                        "typeString": "function () returns (bytes32)"
                      }
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1993:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 377,
                  "id": 390,
                  "nodeType": "Return",
                  "src": "1986:24:1"
                }
              ]
            },
            "documentation": null,
            "id": 392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateRandom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1798:2:1"
            },
            "returnParameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 376,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "1825:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 375,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1825:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1824:9:1"
            },
            "scope": 413,
            "src": "1775:242:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 411,
              "nodeType": "Block",
              "src": "2076:261:1",
              "statements": [
                {
                  "assignments": [398],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 398,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 411,
                      "src": "2086:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 397,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2086:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 404,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 400,
                        "name": "QUERY_EXECUTION_DELAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "2143:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 401,
                        "name": "NUM_RANDOM_BYTES_REQUESTED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "2178:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 402,
                        "name": "GAS_FOR_CALLBACK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 241,
                        "src": "2218:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 399,
                      "name": "provable_newRandomDSQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5874,
                      "src": "2104:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                      }
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2104:140:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2086:158:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f7661626c65207175657279207761732073656e74",
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2280:25:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c6004b51e60ff3f05f040f48924e80a9ec7ffbf1c4efd4c0e7b941b51325b9f",
                          "typeString": "literal_string \"Provable query was sent\""
                        },
                        "value": "Provable query was sent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8c6004b51e60ff3f05f040f48924e80a9ec7ffbf1c4efd4c0e7b941b51325b9f",
                          "typeString": "literal_string \"Provable query was sent\""
                        }
                      ],
                      "id": 405,
                      "name": "logNewProvableQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "2260:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2260:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 408,
                  "nodeType": "EmitStatement",
                  "src": "2255:51:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 409,
                    "name": "queryId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 398,
                    "src": "2323:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 396,
                  "id": 410,
                  "nodeType": "Return",
                  "src": "2316:14:1"
                }
              ]
            },
            "documentation": null,
            "id": 412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_generateRandom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2047:2:1"
            },
            "returnParameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 395,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "2067:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2067:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2066:9:1"
            },
            "scope": 413,
            "src": "2023:314:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 414,
        "src": "99:2240:1"
      }
    ],
    "src": "0:2340:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x0f76eeb2b9c1d4e9fd45941cb8330df474936891acaa953d5b703621d7b75622": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "caller",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "won",
              "type": "bool"
            }
          ],
          "name": "coinFlip",
          "type": "event"
        },
        "0x60a44ec1e34e2d6bd511ca26c0918fe4ca6cd0e8ade53c85ef9048b355cc4199": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "name": "contractDeposit",
          "type": "event"
        },
        "0xcdbda4692d85c08dcb06ba853dfb15e5ebba5ef0479978e04f493ec12c2eb164": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "name": "contractWithdrawal",
          "type": "event"
        },
        "0x2be1635c5283f0f6708c284878c1d846208fc30e84bbb8132bb568a17b10b3a4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "caller",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "won",
              "type": "bool"
            }
          ],
          "name": "CoinFlipResult",
          "type": "event"
        },
        "0xd054642608b20770eee6964340fbf033dfd800f8f86a7f4aa60eb1eb3a015590": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "number",
              "type": "uint256"
            }
          ],
          "name": "GeneratedRandomNumber",
          "type": "event"
        },
        "0xc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c47389": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "message",
              "type": "string"
            }
          ],
          "name": "LogNewProvableQuery",
          "type": "event"
        },
        "0xb4ad5da395d3bba1535d767dbfc8e03665526a0ce05f69252d142015895f28fa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "caller",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "won",
              "type": "bool"
            }
          ],
          "name": "coinFlipResult",
          "type": "event"
        },
        "0xc13d60fe9dffdb6908d2d446cd18134373a51db0738ee04f296eeb9128121cbc": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "number",
              "type": "uint256"
            }
          ],
          "name": "generatedRandomNumber",
          "type": "event"
        },
        "0x94f2559b5e2b297de3db1587daf2352e872ada3dad01dab9ee3733592fa22ed3": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "message",
              "type": "string"
            }
          ],
          "name": "logNewProvableQuery",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xCDE27D24c158C8Ddd36C6bEbC5A0c1633B060b6d",
      "transactionHash": "0x5c4ced1151f687ccecdadca91ae764aa076f3ccb563f4b32d047af7b7913f9d6"
    },
    "5777": {
      "events": {
        "0x0f76eeb2b9c1d4e9fd45941cb8330df474936891acaa953d5b703621d7b75622": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "caller",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "won",
              "type": "bool"
            }
          ],
          "name": "coinFlip",
          "type": "event"
        },
        "0x60a44ec1e34e2d6bd511ca26c0918fe4ca6cd0e8ade53c85ef9048b355cc4199": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "name": "contractDeposit",
          "type": "event"
        },
        "0xcdbda4692d85c08dcb06ba853dfb15e5ebba5ef0479978e04f493ec12c2eb164": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "name": "contractWithdrawal",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x6C67849714eca5086506C19CAC171764D2e79fb7",
      "transactionHash": "0xd4efecddc87ac20c6de95031b3150b516612a03f7743c1b3c91678b3aabd7191"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-06-13T16:44:04.808Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "__callback(bytes32,string)": {
        "details": "The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}
